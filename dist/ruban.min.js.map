{
    "version": 3,
    "file": "ruban.min.js",
    "sources": [
        "../src/modules/utils.js",
        "../src/index.js"
    ],
    "sourcesContent": [
        "export function $_(object) {\r\n\r\n    class DOMElement {\r\n\r\n        constructor(object) {\r\n            if (object[0] === \"#\") {\r\n                this.element = document.getElementById(object.slice(1));\r\n            } else {\r\n                this.element = document.querySelector(object);\r\n            }\r\n\r\n            if (!this.element) {\r\n                throw new Error(`Element not found: ${object}`);\r\n            }\r\n        }\r\n\r\n        // Method to get the inner text of the element\r\n        getText() {\r\n            return this.element.innerText;\r\n        }\r\n\r\n        // Method to set the inner text of the element\r\n        setText(text) {\r\n            this.element.innerText = text;\r\n        }\r\n\r\n        // Method to get the element's value (for inputs, etc.)\r\n        getValue() {\r\n            return this.element.value;\r\n        }\r\n\r\n        // Method to set the element's value (for inputs, etc.)\r\n        setValue(value) {\r\n            this.element.value = value;\r\n        }\r\n\r\n        // Method to add a class to the element\r\n        addClass(className) {\r\n            this.element.classList.add(className);\r\n        }\r\n\r\n        // Method to remove a class from the element\r\n        removeClass(className) {\r\n            this.element.classList.remove(className);\r\n        }\r\n\r\n        // Method to add an event listener to the element\r\n        on(event, callback) {\r\n            this.element.addEventListener(event, callback);\r\n        }\r\n\r\n        // Method to handle POST request for forms (AJAX)\r\n        async post(url, data = {}) {\r\n            if (this.element.tagName === 'FORM') {\r\n                // Convert form data into an object if not passed\r\n                if (Object.keys(data).length === 0) {\r\n                    data = new FormData(this.element);\r\n                    data = Object.fromEntries(data.entries());\r\n                }\r\n\r\n                try {\r\n                    // Send data using fetch\r\n                    const response = await fetch(url, {\r\n                        method: 'POST',\r\n                        headers: {\r\n                            'Content-Type': 'application/json',\r\n                        },\r\n                        body: JSON.stringify(data),\r\n                    });\r\n\r\n                    if (!response.ok) {\r\n                        throw new Error(`Request failed with status: ${response.status}`);\r\n                    }\r\n\r\n                    const responseData = await response.json();\r\n                    return responseData;\r\n\r\n                } catch (error) {\r\n                    console.error('Error during form submission:', error);\r\n                    return { error: error.message };\r\n                }\r\n            } else {\r\n                throw new Error('Element is not a form.');\r\n            }\r\n        }\r\n    }\r\n\r\n    // Return an instance of DOMElement\r\n    return new DOMElement(object);\r\n}\r\n",
        "// src/index.js\r\nimport * as utils from './modules/utils';\r\n\r\nexport default {\r\n  ...utils,\r\n};\r\n"
    ],
    "names": [
        "object",
        "DOMElement",
        "_classCallCheck",
        "this",
        "element",
        "document",
        "getElementById",
        "slice",
        "querySelector",
        "Error",
        "concat",
        "key",
        "value",
        "innerText",
        "text",
        "className",
        "classList",
        "add",
        "remove",
        "event",
        "callback",
        "addEventListener",
        "_regeneratorRuntime",
        "mark",
        "_callee",
        "url",
        "data",
        "response",
        "responseData",
        "_args",
        "arguments",
        "wrap",
        "_context",
        "prev",
        "next",
        "length",
        "undefined",
        "tagName",
        "Object",
        "keys",
        "FormData",
        "fromEntries",
        "entries",
        "fetch",
        "method",
        "headers",
        "body",
        "JSON",
        "stringify",
        "sent",
        "ok",
        "status",
        "json",
        "abrupt",
        "t0",
        "console",
        "error",
        "message",
        "stop",
        "_post",
        "_x",
        "apply",
        "index",
        "_objectSpread",
        "utils"
    ],
    "mappings": "mjPAAO,SAAYA,GAAQ,IAEjBC,EAAU,WAcZ,SAZA,SAAAA,EAAYD,GAOR,+FAPgBE,MAAAD,GACE,MAAdD,EAAO,GACPG,KAAKC,QAAUC,SAASC,eAAeN,EAAOO,MAAM,IAEpDJ,KAAKC,QAAUC,SAASG,cAAcR,IAGrCG,KAAKC,QACN,MAAM,IAAIK,MAAK,sBAAAC,OAAuBV,GAE9C,IAEA,CAAA,CAAAW,IAAA,UAAAC,MACA,WACI,OAAOT,KAAKC,QAAQS,SACxB,GAEA,CAAAF,IAAA,UAAAC,MACA,SAAQE,GACJX,KAAKC,QAAQS,UAAYC,CAC7B,GAEA,CAAAH,IAAA,WAAAC,MACA,WACI,OAAOT,KAAKC,QAAQQ,KACxB,GAEA,CAAAD,IAAA,WAAAC,MACA,SAASA,GACLT,KAAKC,QAAQQ,MAAQA,CACzB,GAEA,CAAAD,IAAA,WAAAC,MACA,SAASG,GACLZ,KAAKC,QAAQY,UAAUC,IAAIF,EAC/B,GAEA,CAAAJ,IAAA,cAAAC,MACA,SAAYG,GACRZ,KAAKC,QAAQY,UAAUE,OAAOH,EAClC,GAEA,CAAAJ,IAAA,KAAAC,MACA,SAAGO,EAAOC,GACNjB,KAAKC,QAAQiB,iBAAiBF,EAAOC,EACzC,GAEA,CAAAT,IAAA,OAAAC,SAAAU,IAAAC,MACA,SAAAC,EAAWC,GAAG,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,UAAA,OAAAR,IAAAS,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,KAAA,EAAW,GAATR,EAAIG,EAAAM,OAAAN,QAAAO,IAAAP,EAAAO,GAAAP,EAAG,GAAA,CAAA,EACU,SAAzB1B,KAAKC,QAAQiC,QAAkB,CAAAL,EAAAE,KAAA,GAAA,KAAA,CAK9B,OAHgC,IAA7BI,OAAOC,KAAKb,GAAMS,SAClBT,EAAO,IAAIc,SAASrC,KAAKC,SACzBsB,EAAOY,OAAOG,YAAYf,EAAKgB,YAClCV,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAI0BS,MAAMlB,EAAK,CAC9BmB,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAUtB,KACvB,KAAA,EANY,IAARC,EAAQK,EAAAiB,MAQAC,GAAE,CAAAlB,EAAAE,KAAA,EAAA,KAAA,CAAA,MACN,IAAIzB,MAAKC,+BAAAA,OAAgCiB,EAASwB,SAAS,KAAA,EAAA,OAAAnB,EAAAE,KAAA,GAG1CP,EAASyB,OAAM,KAAA,GAAxB,OAAZxB,EAAYI,EAAAiB,KAAAjB,EAAAqB,OAAA,SACXzB,GAAY,KAAA,GAGmC,OAHnCI,EAAAC,KAAA,GAAAD,EAAAsB,GAAAtB,EAAA,MAAA,GAGnBuB,QAAQC,MAAM,gCAA+BxB,EAAAsB,IAAStB,EAAAqB,OAC/C,SAAA,CAAEG,MAAOxB,EAAAsB,GAAMG,UAAS,KAAA,GAAAzB,EAAAE,KAAA,GAAA,MAAA,KAAA,GAAA,MAG7B,IAAIzB,MAAM,0BAAyB,KAAA,GAAA,IAAA,MAAA,OAAAuB,EAAA0B,OAAA,GAAAlC,EAAArB,KAAA,CAAA,CAAA,EAAA,KAEhD,IAjCDwD,gLAiCC,SAhCSC,GAAA,OAAAD,EAAAE,MAAA1D,KAAA2B,UAAA,oGADV6B,EAjDY,GAsFhB,OAAO,IAAI1D,EAAWD,EAC1B,ICtFA8D,iWAAAC,IACKC"
}
