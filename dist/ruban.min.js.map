{"version":3,"file":"ruban.min.js","sources":["../src/modules/utils/errors.js","../src/modules/utils/sanitize.js","../src/modules/utils/http.js","../src/modules/utils/secure-form.js","../src/modules/utils/form.js","../src/main.js","../src/modules/ribbon.js"],"sourcesContent":["export class NetworkError extends Error {\r\n    constructor(message) {\r\n        super(message);\r\n        this.name = \"NetworkError\";\r\n    }\r\n}\r\n\r\nexport class TimeoutError extends Error {\r\n    constructor(message) {\r\n        super(message);\r\n        this.name = \"TimeoutError\";\r\n    }\r\n}\r\n\r\nexport class ValidationError extends Error {\r\n    constructor(message) {\r\n        super(message);\r\n        this.name = \"ValidationError\";\r\n    }\r\n}","// Sanitize Input String (Letters and Numbers Only)\r\nexport function sanis(inputString) {\r\n    return inputString.replace(/[^a-zA-Z0-9]/g, \"\");\r\n}\r\n\r\n// Sanitize Input Letters Only\r\nexport function sanil(inputString) {\r\n    return inputString.replace(/[^a-zA-Z]/g, \"\");\r\n}\r\n\r\n// Sanitize Input Numbers Only\r\nexport function sanin(inputString) {\r\n    return inputString.replace(/[^0-9]/g, \"\");\r\n}\r\n\r\n// Extend String prototype with the custom sanitization methods\r\nString.prototype.sanis = function () {\r\n    return this.replace(/[^a-zA-Z0-9]/g, \"\");\r\n};\r\n\r\nString.prototype.sanil = function () {\r\n    return this.replace(/[^a-zA-Z]/g, \"\");\r\n};\r\n\r\nString.prototype.sanin = function () {\r\n    return this.replace(/[^0-9]/g, \"\");\r\n};\r\n","import { NetworkError, TimeoutError } from \"./errors\";\r\n\r\nexport async function get(url, options = {}) {\r\n    const { timeout = 7500, secretKey } = options;\r\n    const controller = new AbortController();\r\n    const timeoutId = setTimeout(() => controller.abort(), timeout);\r\n\r\n    const {\r\n        headers = {},\r\n        queryParams = {},\r\n        includeCredentials = false,\r\n    } = options;\r\n\r\n    try {\r\n        // Validate URL\r\n        if (!url || typeof url !== \"string\") {\r\n            throw new Error(\"Invalid URL provided.\");\r\n        }\r\n\r\n        // Append query parameters to the URL\r\n        const urlWithParams = new URL(url);\r\n        Object.entries(queryParams).forEach(([key, value]) => {\r\n            urlWithParams.searchParams.append(key, value);\r\n        });\r\n\r\n        // Add secret key to headers if provided\r\n        if (secretKey) {\r\n            headers[\"Authorization\"] = `Bearer ${secretKey}`;\r\n        }\r\n\r\n        // Make the request\r\n        const response = await fetch(urlWithParams.toString(), {\r\n            method: \"GET\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                ...headers,\r\n            },\r\n            credentials: includeCredentials ? \"include\" : \"omit\",\r\n            signal: controller.signal,\r\n        });\r\n\r\n        // Clear the timeout\r\n        clearTimeout(timeoutId);\r\n\r\n        // Check for HTTP errors\r\n        if (!response.ok) {\r\n            throw new NetworkError(`Request failed with status: ${response.status}`);\r\n        }\r\n\r\n        // Parse and return the response data\r\n        const responseData = await response.json();\r\n        return responseData;\r\n\r\n    } catch (error) {\r\n        if (error instanceof NetworkError) {\r\n            console.error(\"Network error:\", error.message);\r\n        } else if (error instanceof TimeoutError) {\r\n            console.error(\"Timeout error:\", error.message);\r\n        } else {\r\n            console.error(\"Unknown error:\", error);\r\n        }\r\n        throw error;\r\n    }\r\n}","import { ValidationError } from \"./errors\";\r\n\r\nfunction getFormData(formElement) {\r\n    const formData = new FormData(formElement);\r\n    const formObject = {};\r\n\r\n    formData.forEach((value, key) => {\r\n        formObject[key] = value;\r\n    });\r\n\r\n    return formObject;\r\n}\r\n\r\nexport default function secureForm(form) {\r\n    // Setup legit version of form\r\n    const originalForm = getFormData(form);\r\n    console.log('Original form:', originalForm);\r\n\r\n    // Listen for form submission\r\n    form.addEventListener('submit', (event) => {\r\n        event.preventDefault();\r\n        const formObject = getFormData(form);\r\n        console.log('Form object:', formObject);\r\n\r\n        // Compare all keys/name(inputs)\r\n        const isFormSecure = Object.keys(formObject).every((key) => {\r\n\r\n            return key in originalForm;\r\n        });\r\n\r\n        if (isFormSecure) {\r\n            form.submit();\r\n        } else {\r\n            throw new ValidationError('Form is not secure!');\r\n        }\r\n    });\r\n}","import { sanis, sanil, sanin } from './sanitize.js';\r\n\r\n\r\nexport default function form(object) {\r\n    class FormElement {\r\n        constructor(object) {\r\n            this.element = document.getElementById(object);\r\n\r\n            if (!this.element) {\r\n                throw new Error(`Element not found: ${object}`);\r\n            }\r\n\r\n            if (this.element.tagName !== \"FORM\") {\r\n                throw new Error(\"Element is not a form.\");\r\n            }\r\n        }\r\n\r\n        getLabelText(index = 0) {\r\n            const inputs = this.element.querySelectorAll(\"input, select, textarea\");\r\n            if (index >= inputs.length) return null;\r\n\r\n            const inputName = inputs[index].name;\r\n            if (!inputName) return null;\r\n\r\n            const label = this.element.querySelector(`label[for=\"${inputName}\"]`);\r\n            return label ? label.innerText : null;\r\n        }\r\n\r\n        async post({ data = {}, options = { csrf: true, textOnly: false }, url = window.location.href } = {}) {\r\n            // Convert form data into an object if not passed\r\n            if (Object.keys(data).length === 0) {\r\n                data = new FormData(this.element);\r\n                // Iterate over FormData entries and convert to object\r\n                //data = Object.fromEntries(data.entries());\r\n                // Sanitize each input value\r\n                data = Object.fromEntries(\r\n                    Array.from(data.entries()).map(([key, value]) => [\r\n                        key,\r\n                        options.textOnly ? sanis(value) : value,\r\n                    ])\r\n                );\r\n            }\r\n\r\n            // Check for CSRF token\r\n            let csrfToken = document.querySelector('meta[name=\"csrf-token\"]')?.content;\r\n            if (!csrfToken) {\r\n                csrfToken = document.querySelector('input[name=\"_csrf\"]')?.value || document.querySelector('input[name=\"csrf\"]')?.value;\r\n            }\r\n            if (!csrfToken && options.csrf) {\r\n                throw new Error(\"CSRF token not found.\");\r\n            }\r\n\r\n\r\n            // Headers\r\n            const headers = {\r\n                \"Content-Type\": \"application/json\",\r\n                ...(options.csrf && csrfToken ? { \"X-CSRF-Token\": csrfToken } : {}),\r\n            };\r\n\r\n            try {\r\n                const response = await fetch(url, {\r\n                    method: \"POST\",\r\n                    headers: headers,\r\n                    body: JSON.stringify(data),\r\n                    credentials: \"include\"\r\n                });\r\n\r\n                if (!response.ok) {\r\n                    throw new Error(\r\n                        `Request failed with status: ${response.status}`\r\n                    );\r\n                }\r\n\r\n                const responseData = await response.json();\r\n\r\n                return responseData;\r\n                \r\n            } catch (error) {\r\n                console.error(\"Error during form submission:\", error);\r\n                return { error: error.message };\r\n            }\r\n        }\r\n\r\n        populateForm(data) {\r\n            for (let key in data) {\r\n                const field = this.element.querySelector(`[name=\"${key}\"]`);\r\n                field ? field.value = data[key] : null;\r\n            }\r\n        }\r\n    }\r\n\r\n    return new FormElement(object);\r\n}","import $ from \"./modules/ribbon\";\r\nimport * as utils from \"./modules/utils\";\r\n\r\nconst Ruban = {\r\n    $,\r\n    ...utils,\r\n};\r\n\r\nexport default Ruban;\r\n\r\nif (typeof window !== \"undefined\") {\r\n    window.Ruban = window.Ruban || Ruban;\r\n    //window.$ = $;\r\n}\r\n\r\n(function (global) {\r\n    // Default configuration\r\n    const defaultConfig = {\r\n        debug: false,\r\n        forms: {\r\n            secure: true\r\n        }\r\n    };\r\n\r\n    // Ensure global config object exists\r\n    global.RubanConfig = global.RubanConfig || {};\r\n\r\n    // Check if RubanConfig manual object was correctly loaded\r\n    const isManualConfigLoaded = Object.keys(global.RubanConfig).length > 0;\r\n\r\n    // Check if `ruban.config.js` was loaded\r\n    // TODO:\r\n\r\n    // Merge config with priority\r\n    const mergeConfigs = (defaultConfig, userConfig) => {\r\n        const result = { ...defaultConfig };\r\n        Object.keys(userConfig).forEach((key) => {\r\n            if (userConfig[key] !== undefined) {\r\n                result[key] = userConfig[key];\r\n            }\r\n        });\r\n        return result;\r\n    };\r\n    const finalConfig = mergeConfigs(defaultConfig, global.RubanConfig);\r\n\r\n    // Check if config is valid\r\n    const hasValidConfig = Object.values(global.RubanConfig).some(val => val !== undefined);\r\n    if (!isManualConfigLoaded && !hasValidConfig) {\r\n        console.warn(\"[Ruban Warning]: No valid configuration found. Using default settings.\");\r\n    }\r\n\r\n    //console.log(\"Ruban before extension:\", global.Ruban);\r\n\r\n    // Extend global Ruban object\r\n    Object.assign(global.Ruban, {\r\n        getConfig: () => finalConfig,\r\n        setConfig: (newConfig) => {\r\n            Object.assign(finalConfig, newConfig);\r\n            global.manualRubanConfigSet = true;\r\n        },\r\n        log: (message) => {\r\n            if (finalConfig.debug) {\r\n                console.log(`[Ruban Debug]: ${message}`);\r\n            }\r\n        }\r\n    });\r\n    //console.log(\"Ruban after extension:\", global.Ruban);\r\n\r\n    if (!global.Ruban.__DOMContentLoaded) {\r\n       global.Ruban.__DOMContentLoaded = true;\r\n\r\n        document.addEventListener(\"DOMContentLoaded\", function () {\r\n\r\n            const forms = document.querySelectorAll('form[data-ruban-form-secure]');\r\n\r\n            if (finalConfig.forms.secure) {\r\n\r\n                if (forms.length) {\r\n                    forms.forEach((form) => {\r\n                        //console.log(form);\r\n\r\n                        if (typeof global.Ruban.secureForm === \"function\") {\r\n                            form.setAttribute(\"data-ruban-form-secure\", \"true\");\r\n                            try {\r\n                                global.Ruban.secureForm(form);\r\n                            } catch (error) {\r\n                                form.removeAttribute(\"data-ruban-form-secure\");\r\n                                finalConfig.debug ? console.warn(\"[Ruban Warning]: Could not secure form:\", form) : null;\r\n                            }\r\n                        } else {\r\n                            form.removeAttribute(\"data-ruban-form-secure\");\r\n                            console.warn(\"[Ruban Warning]: secureForm function not found. Make sure it is properly imported.\");\r\n                        }\r\n\r\n                        form.querySelectorAll('[type=\"submit\"]').forEach((submitBtn) => {\r\n                            console.log(submitBtn);\r\n                            submitBtn.addEventListener(\"click\", function (event) {\r\n                                event.preventDefault();\r\n                                // TODO - Add submitForm function ?\r\n                                /* if (typeof global.Ruban.submitForm === \"function\") {\r\n                                    global.Ruban.submitForm(form);\r\n                                } else {\r\n                                    console.warn(\"[Ruban Warning]: submitForm function not found. Make sure it is properly imported.\");\r\n                                } */\r\n                            });\r\n                        });\r\n\r\n                        form.addEventListener(\"submit\", function (event) {\r\n                            event.preventDefault();\r\n                            // TODO - Add submitForm function ?\r\n                            /* if (typeof global.Ruban.submitForm === \"function\") {\r\n                                global.Ruban.submitForm(form);\r\n                            } else {\r\n                                console.warn(\"[Ruban Warning]: submitForm function not found. Make sure it is properly imported.\");\r\n                            } */\r\n                        });\r\n                    });\r\n\r\n                    // Only dispatch event if forms exist\r\n                    document.dispatchEvent(new Event(\"Ruban-Forms-Secured\"));\r\n\r\n                } else {\r\n                    if (finalConfig.debug) {\r\n                        console.warn(\"[Ruban Warning]: No forms were found to secure.\");\r\n                    }\r\n                }\r\n            } else if (forms.length && finalConfig.debug) console.warn(\"[Ruban Warning]: Forms were found to secure but the global variable to secure forms is set to false.\");\r\n        });\r\n    }\r\n\r\n    \r\n    console.log(\"Ruban is ready!\");\r\n\r\n})(window);\r\n\r\n// Protect Ruban from being overwritten\r\nObject.defineProperty(window, 'Ruban', {\r\n    value: window.Ruban,\r\n    writable: false,\r\n    configurable: false\r\n});","export default function $(object) {\r\n    \r\n    class DOMElement {\r\n\r\n        constructor(object) {\r\n            if (object[0] === \"#\") {\r\n                this.element = document.getElementById(object.slice(1));\r\n            } else {\r\n                this.element = document.querySelector(object);\r\n            }\r\n\r\n            if (!this.element) {\r\n                throw new Error(`Element not found: ${object}`);\r\n            }\r\n        }\r\n\r\n        // Method to get the inner text of the element\r\n        getText() {\r\n            return this.element.innerText;\r\n        }\r\n\r\n        // Method to get the label text of the element\r\n        getLabelText(index = 0) {\r\n            const inputName =\r\n                this.element.name ||\r\n                this.element.closest('form')?.querySelectorAll(\"input, select, textarea\")[index].name;\r\n            if (!inputName) return null;\r\n\r\n            const label = this.element.closest(\"form\")?.querySelector(`label[for=\"${inputName}\"]`);\r\n\r\n            return label ? label.innerText : null;\r\n        }\r\n        \r\n        // Method to set the inner text of the element\r\n        setText(text) {\r\n            this.element.innerText = text;\r\n        }\r\n\r\n        // Method to get the element's value (for inputs, etc.)\r\n        getValue() {\r\n            return this.element.value;\r\n        }\r\n\r\n        // Method to set the element's value (for inputs, etc.)\r\n        setValue(value) {\r\n            this.element.value = value;\r\n        }\r\n\r\n        // Method to add a class to the element\r\n        addClass(className) {\r\n            this.element.classList.add(className);\r\n        }\r\n\r\n        // Method to remove a class from the element\r\n        removeClass(className) {\r\n            this.element.classList.remove(className);\r\n        }\r\n\r\n        // Method to add an event listener to the element\r\n        on(event, callback) {\r\n            this.element.addEventListener(event, callback);\r\n        }\r\n\r\n    }\r\n\r\n    return new DOMElement(object);\r\n}"],"names":["NetworkError","_Error","message","_this","_classCallCheck","_callSuper","name","_inherits","_createClass","_wrapNativeSuper","Error","TimeoutError","_Error2","_this2","ValidationError","_Error3","_this3","sanis","inputString","replace","_get","_asyncToGenerator","_regeneratorRuntime","mark","_callee","url","options","_options$timeout","timeout","secretKey","controller","timeoutId","_options$headers","headers","_options$queryParams","queryParams","_options$includeCrede","includeCredentials","urlWithParams","response","responseData","_args","arguments","wrap","_context","prev","next","length","undefined","AbortController","setTimeout","abort","URL","Object","entries","forEach","_ref","_ref2","_slicedToArray","key","value","searchParams","append","concat","fetch","toString","method","_objectSpread","credentials","signal","sent","clearTimeout","ok","status","json","abrupt","t0","console","error","stop","apply","this","getFormData","formElement","formData","FormData","formObject","String","prototype","sanil","sanin","object","FormElement","element","document","getElementById","tagName","index","inputs","querySelectorAll","inputName","label","querySelector","innerText","_post","_document$querySelect","_ref$data","data","_ref$options","_ref$url","csrfToken","_document$querySelect2","_document$querySelect3","csrf","textOnly","window","location","href","keys","fromEntries","Array","from","map","_ref3","content","body","JSON","stringify","field","get","_x","form","originalForm","log","addEventListener","event","preventDefault","every","submit","Ruban","$","DOMElement","slice","_this$element$closest","_this$element$closest2","closest","text","className","classList","add","remove","callback","utils","global","RubanConfig","isManualConfigLoaded","finalConfig","defaultConfig","userConfig","result","mergeConfigs","debug","forms","secure","hasValidConfig","values","some","val","warn","assign","getConfig","setConfig","newConfig","manualRubanConfigSet","__DOMContentLoaded","secureForm","setAttribute","removeAttribute","submitBtn","dispatchEvent","Event","defineProperty","writable","configurable"],"mappings":"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"}