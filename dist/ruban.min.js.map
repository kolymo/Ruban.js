{"version":3,"file":"ruban.min.js","sources":["../src/modules/ribbon.js","../src/modules/utils/sanitize.js","../src/modules/utils/errors.js","../src/modules/utils/http.js","../src/modules/utils/form.js","../src/main.js"],"sourcesContent":["export default function $_(object) {\r\n    \r\n    class DOMElement {\r\n\r\n        constructor(object) {\r\n            if (object[0] === \"#\") {\r\n                this.element = document.getElementById(object.slice(1));\r\n            } else {\r\n                this.element = document.querySelector(object);\r\n            }\r\n\r\n            if (!this.element) {\r\n                throw new Error(`Element not found: ${object}`);\r\n            }\r\n        }\r\n\r\n        // Method to get the inner text of the element\r\n        getText() {\r\n            return this.element.innerText;\r\n        }\r\n\r\n        // Method to get the label text of the element\r\n        getLabelText(index = 0) {\r\n            const inputName =\r\n                this.element.name ||\r\n                this.parentElement.querySelectorAll(\"input, select, textarea\")[\r\n                    index\r\n                ].name;\r\n            if (!inputName) return null;\r\n\r\n            const label = this.element\r\n                .closest(\"form\")\r\n                ?.querySelector(`label[for=\"${inputName}\"]`);\r\n\r\n            return label ? label.innerText : null;\r\n        }\r\n        \r\n        // Method to set the inner text of the element\r\n        setText(text) {\r\n            this.element.innerText = text;\r\n        }\r\n\r\n        // Method to get the element's value (for inputs, etc.)\r\n        getValue() {\r\n            return this.element.value;\r\n        }\r\n\r\n        // Method to set the element's value (for inputs, etc.)\r\n        setValue(value) {\r\n            this.element.value = value;\r\n        }\r\n\r\n        // Method to add a class to the element\r\n        addClass(className) {\r\n            this.element.classList.add(className);\r\n        }\r\n\r\n        // Method to remove a class from the element\r\n        removeClass(className) {\r\n            this.element.classList.remove(className);\r\n        }\r\n\r\n        // Method to add an event listener to the element\r\n        on(event, callback) {\r\n            this.element.addEventListener(event, callback);\r\n        }\r\n\r\n    }\r\n\r\n    return new DOMElement(object);\r\n}","// Sanitize Input String (Letters and Numbers Only)\r\nexport function sanis(inputString) {\r\n    return inputString.replace(/[^a-zA-Z0-9]/g, \"\");\r\n}\r\n\r\n// Sanitize Input Letters Only\r\nexport function sanil(inputString) {\r\n    return inputString.replace(/[^a-zA-Z]/g, \"\");\r\n}\r\n\r\n// Sanitize Input Numbers Only\r\nexport function sanin(inputString) {\r\n    return inputString.replace(/[^0-9]/g, \"\");\r\n}\r\n\r\n// Extend String prototype with the custom sanitization methods\r\nString.prototype.sanis = function () {\r\n    return this.replace(/[^a-zA-Z0-9]/g, \"\");\r\n};\r\n\r\nString.prototype.sanil = function () {\r\n    return this.replace(/[^a-zA-Z]/g, \"\");\r\n};\r\n\r\nString.prototype.sanin = function () {\r\n    return this.replace(/[^0-9]/g, \"\");\r\n};\r\n","export class NetworkError extends Error {\r\n    constructor(message) {\r\n        super(message);\r\n        this.name = \"NetworkError\";\r\n    }\r\n}\r\n\r\nexport class TimeoutError extends Error {\r\n    constructor(message) {\r\n        super(message);\r\n        this.name = \"TimeoutError\";\r\n    }\r\n}\r\n\r\nexport class ValidationError extends Error {\r\n    constructor(message) {\r\n        super(message);\r\n        this.name = \"ValidationError\";\r\n    }\r\n}","import { NetworkError, TimeoutError } from \"./errors\";\r\n\r\nexport async function get(url, options = {}) {\r\n    const { timeout = 7500, secretKey } = options;\r\n    const controller = new AbortController();\r\n    const timeoutId = setTimeout(() => controller.abort(), timeout);\r\n\r\n    const {\r\n        headers = {},\r\n        queryParams = {},\r\n        includeCredentials = false,\r\n    } = options;\r\n\r\n    try {\r\n        // Validate URL\r\n        if (!url || typeof url !== \"string\") {\r\n            throw new Error(\"Invalid URL provided.\");\r\n        }\r\n\r\n        // Append query parameters to the URL\r\n        const urlWithParams = new URL(url);\r\n        Object.entries(queryParams).forEach(([key, value]) => {\r\n            urlWithParams.searchParams.append(key, value);\r\n        });\r\n\r\n        // Add secret key to headers if provided\r\n        if (secretKey) {\r\n            headers[\"Authorization\"] = `Bearer ${secretKey}`;\r\n        }\r\n\r\n        // Make the request\r\n        const response = await fetch(urlWithParams.toString(), {\r\n            method: \"GET\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                ...headers, // Merge custom headers (including secret key)\r\n            },\r\n            credentials: includeCredentials ? \"include\" : \"omit\",\r\n            signal: controller.signal,\r\n        });\r\n\r\n        // Clear the timeout\r\n        clearTimeout(timeoutId);\r\n\r\n        // Check for HTTP errors\r\n        if (!response.ok) {\r\n            throw new NetworkError(`Request failed with status: ${response.status}`);\r\n        }\r\n\r\n        // Parse and return the response data\r\n        const responseData = await response.json();\r\n        return responseData;\r\n\r\n    } catch (error) {\r\n        if (error instanceof NetworkError) {\r\n            console.error(\"Network error:\", error.message);\r\n        } else if (error instanceof TimeoutError) {\r\n            console.error(\"Timeout error:\", error.message);\r\n        } else {\r\n            console.error(\"Unknown error:\", error);\r\n        }\r\n        throw error;\r\n    }\r\n}","import { sanis, sanil, sanin } from './sanitize.js';\r\n\r\n\r\nexport default function form(object) {\r\n    class FormElement {\r\n        constructor(object) {\r\n            this.element = document.getElementById(object);\r\n\r\n            if (!this.element) {\r\n                throw new Error(`Element not found: ${object}`);\r\n            }\r\n\r\n            if (this.element.tagName !== \"FORM\") {\r\n                throw new Error(\"Element is not a form.\");\r\n            }\r\n        }\r\n\r\n        async post({ data = {}, options = { csrf: true, textOnly: false }, url = window.location.href } = {}) {\r\n            // Convert form data into an object if not passed\r\n            if (Object.keys(data).length === 0) {\r\n                data = new FormData(this.element);\r\n                // Iterate over FormData entries and convert to object\r\n                //data = Object.fromEntries(data.entries());\r\n                // Sanitize each input value\r\n                data = Object.fromEntries(\r\n                    Array.from(data.entries()).map(([key, value]) => [\r\n                        key,\r\n                        options.textOnly ? sanis(value) : value,\r\n                    ])\r\n                );\r\n            }\r\n\r\n            // Check for CSRF token\r\n            let csrfToken = document.querySelector('meta[name=\"csrf-token\"]')?.content;\r\n            if (!csrfToken) {\r\n                csrfToken = document.querySelector('input[name=\"_csrf\"]')?.value || document.querySelector('input[name=\"csrf\"]')?.value;\r\n            }\r\n            if (!csrfToken && options.csrf) {\r\n                throw new Error(\"CSRF token not found.\");\r\n            }\r\n\r\n\r\n            // Headers\r\n            const headers = {\r\n                \"Content-Type\": \"application/json\",\r\n                ...(options.csrf && csrfToken ? { \"X-CSRF-Token\": csrfToken } : {}),\r\n            };\r\n\r\n            try {\r\n                const response = await fetch(url, {\r\n                    method: \"POST\",\r\n                    headers: headers,\r\n                    body: JSON.stringify(data),\r\n                    credentials: \"include\"\r\n                });\r\n\r\n                if (!response.ok) {\r\n                    throw new Error(\r\n                        `Request failed with status: ${response.status}`\r\n                    );\r\n                }\r\n\r\n                const responseData = await response.json();\r\n\r\n                return responseData;\r\n                \r\n            } catch (error) {\r\n                console.error(\"Error during form submission:\", error);\r\n                return { error: error.message };\r\n            }\r\n        }\r\n\r\n        populateForm(data) {\r\n            for (let key in data) {\r\n                const field = this.element.querySelector(`[name=\"${key}\"]`);\r\n                field ? field.value = data[key] : null;\r\n            }\r\n        }\r\n    }\r\n\r\n    return new FormElement(object);\r\n}","import $_ from './modules/ribbon';\r\nimport * as utils from './modules/utils';\r\n\r\nconst Ruban = {\r\n  $_,\r\n  ...utils,\r\n};\r\n\r\n\r\nexport default Ruban;\r\n\r\n\r\nif (typeof window !== 'undefined') {\r\n  window.Ruban = Ruban;\r\n  window.$_ = $_;\r\n  window.$ = $_;\r\n}"],"names":["$_","object","DOMElement","_createClass","_classCallCheck","this","element","document","getElementById","slice","querySelector","Error","concat","key","value","innerText","_this$element$closest","index","arguments","length","undefined","inputName","name","parentElement","querySelectorAll","label","closest","text","className","classList","add","remove","event","callback","addEventListener","sanis","inputString","replace","String","prototype","sanil","sanin","NetworkError","_Error","message","_this","_callSuper","_inherits","_wrapNativeSuper","TimeoutError","_Error2","_this2","ValidationError","_Error3","_this3","_get","_asyncToGenerator","_regeneratorRuntime","mark","_callee","url","options","_options$timeout","timeout","secretKey","controller","timeoutId","_options$headers","headers","_options$queryParams","queryParams","_options$includeCrede","includeCredentials","urlWithParams","response","responseData","_args","wrap","_context","prev","next","AbortController","setTimeout","abort","URL","Object","entries","forEach","_ref","_ref2","_slicedToArray","searchParams","append","fetch","toString","method","_objectSpread","credentials","signal","sent","clearTimeout","ok","status","json","abrupt","t0","console","error","stop","apply","FormElement","tagName","_post","_document$querySelect","_ref$data","data","_ref$options","_ref$url","csrfToken","_document$querySelect2","_document$querySelect3","csrf","textOnly","window","location","href","keys","FormData","fromEntries","Array","from","map","_ref3","content","body","JSON","stringify","field","get","_x","Ruban","utils","$"],"mappings":"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"}