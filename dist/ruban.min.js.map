{"version":3,"file":"ruban.min.js","sources":["../src/modules/utils/errors.js","../src/modules/utils/sanitize.js","../src/modules/utils/http.js","../src/modules/utils/secure-form.js","../src/modules/utils/form.js","../src/modules/utils/time.js","../src/main.js","../src/modules/ribbon.js"],"sourcesContent":["export class NetworkError extends Error {\r\n    constructor(message) {\r\n        super(message);\r\n        this.name = \"NetworkError\";\r\n    }\r\n}\r\n\r\nexport class TimeoutError extends Error {\r\n    constructor(message) {\r\n        super(message);\r\n        this.name = \"TimeoutError\";\r\n    }\r\n}\r\n\r\nexport class ValidationError extends Error {\r\n    constructor(message) {\r\n        super(message);\r\n        this.name = \"ValidationError\";\r\n    }\r\n}","// Sanitize Input String (Letters and Numbers Only)\r\nexport function sanis(inputString) {\r\n    return inputString.replace(/[^a-zA-Z0-9]/g, \"\");\r\n}\r\n\r\n// Sanitize Input Letters Only\r\nexport function sanil(inputString) {\r\n    return inputString.replace(/[^a-zA-Z]/g, \"\");\r\n}\r\n\r\n// Sanitize Input Numbers Only\r\nexport function sanin(inputString) {\r\n    return inputString.replace(/[^0-9]/g, \"\");\r\n}\r\n\r\n// Extend String prototype with the custom sanitization methods\r\nString.prototype.sanis = function () {\r\n    return this.replace(/[^a-zA-Z0-9]/g, \"\");\r\n};\r\n\r\nString.prototype.sanil = function () {\r\n    return this.replace(/[^a-zA-Z]/g, \"\");\r\n};\r\n\r\nString.prototype.sanin = function () {\r\n    return this.replace(/[^0-9]/g, \"\");\r\n};\r\n","import { NetworkError, TimeoutError } from \"./errors\";\r\n\r\nexport async function get(url, options = {}) {\r\n    const { timeout = 7500, secretKey } = options;\r\n    const controller = new AbortController();\r\n    const timeoutId = setTimeout(() => controller.abort(), timeout);\r\n\r\n    const {\r\n        headers = {},\r\n        queryParams = {},\r\n        includeCredentials = false,\r\n    } = options;\r\n\r\n    try {\r\n        // Validate URL\r\n        if (!url || typeof url !== \"string\") {\r\n            throw new Error(\"Invalid URL provided.\");\r\n        }\r\n\r\n        // Append query parameters to the URL\r\n        const urlWithParams = new URL(url);\r\n        Object.entries(queryParams).forEach(([key, value]) => {\r\n            urlWithParams.searchParams.append(key, value);\r\n        });\r\n\r\n        // Add secret key to headers if provided\r\n        if (secretKey) {\r\n            headers[\"Authorization\"] = `Bearer ${secretKey}`;\r\n        }\r\n\r\n        // Make the request\r\n        const response = await fetch(urlWithParams.toString(), {\r\n            method: \"GET\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                ...headers,\r\n            },\r\n            credentials: includeCredentials ? \"include\" : \"omit\",\r\n            signal: controller.signal,\r\n        });\r\n\r\n        // Clear the timeout\r\n        clearTimeout(timeoutId);\r\n\r\n        // Check for HTTP errors\r\n        if (!response.ok) {\r\n            throw new NetworkError(`Request failed with status: ${response.status}`);\r\n        }\r\n\r\n        // Parse and return the response data\r\n        const responseData = await response.json();\r\n        return responseData;\r\n\r\n    } catch (error) {\r\n        if (error instanceof NetworkError) {\r\n            console.error(\"Network error:\", error.message);\r\n        } else if (error instanceof TimeoutError) {\r\n            console.error(\"Timeout error:\", error.message);\r\n        } else {\r\n            console.error(\"Unknown error:\", error);\r\n        }\r\n        throw error;\r\n    }\r\n}","import { ValidationError } from \"./errors\";\r\n\r\nfunction getFormData(formElement) {\r\n    const formData = new FormData(formElement);\r\n    const formObject = {};\r\n\r\n    formData.forEach((value, key) => {\r\n        formObject[key] = value;\r\n    });\r\n\r\n    return formObject;\r\n}\r\n\r\nexport default function secureForm(form) {\r\n    // Setup legit version of form\r\n    const originalForm = getFormData(form);\r\n    console.log('Original form:', originalForm);\r\n\r\n    // Listen for form submission\r\n    form.addEventListener('submit', (event) => {\r\n        event.preventDefault();\r\n        \r\n        const formObject = getFormData(form);\r\n        console.log('Form object:', formObject);\r\n\r\n        // Compare all keys/name(inputs)\r\n        const isFormSecure = Object.keys(formObject).every((key) => {\r\n            return key in originalForm;\r\n        });\r\n\r\n        if (isFormSecure) {\r\n            form.submit();\r\n        } else {\r\n            throw new ValidationError('Form is not secure or has been modified!');\r\n        }\r\n    });\r\n}","import { sanis, sanil, sanin } from './sanitize.js';\r\n\r\n\r\nexport default function form(object) {\r\n    class FormElement {\r\n        constructor(object) {\r\n            this.element = document.getElementById(object);\r\n\r\n            if (!this.element) {\r\n                throw new Error(`Element not found: ${object}`);\r\n            }\r\n\r\n            if (this.element.tagName !== \"FORM\") {\r\n                throw new Error(\"Element is not a form.\");\r\n            }\r\n\r\n            if (window.RubanConfig.debug) {\r\n                console.log('Constructor', this.element);\r\n            }\r\n\r\n            \r\n            this.element.addEventListener('submit', function (event) {\r\n                event.preventDefault();\r\n                (window.RubanConfig.debug) ? console.log('Constructor Form Submission Prevented') : null;\r\n\r\n                \r\n            });\r\n        }\r\n\r\n        getLabelText(index = 0) {\r\n            const inputs = this.element.querySelectorAll(\"input, select, textarea\");\r\n            if (index >= inputs.length) return null;\r\n\r\n            const inputName = inputs[index].name;\r\n            if (!inputName) return null;\r\n\r\n            const label = this.element.querySelector(`label[for=\"${inputName}\"]`);\r\n            return label ? label.innerText : null;\r\n        }\r\n\r\n        async post({ data = {}, options = { csrf: true, textOnly: false }, url = window.location.href } = {}) {\r\n\r\n            // Convert form data into an object if not passed\r\n            if (Object.keys(data).length === 0) {\r\n                data = new FormData(this.element);\r\n                // Iterate over FormData entries and convert to object\r\n                //data = Object.fromEntries(data.entries());\r\n                // Sanitize each input value\r\n                data = Object.fromEntries(\r\n                    Array.from(data.entries()).map(([key, value]) => [\r\n                        key,\r\n                        options.textOnly ? sanis(value) : value,\r\n                    ])\r\n                );\r\n            }\r\n\r\n            // TODO: Check if there was already one in the formData\r\n            // Check for CSRF token\r\n            let csrfToken = document.querySelector('meta[name=\"csrf-token\"]')?.content || \r\n            document.querySelector('input[name*=\"csrf\"]')?.value;\r\n\r\n            if (!csrfToken && options.csrf) {\r\n            throw new Error(\"CSRF token not found.\");\r\n            }\r\n\r\n\r\n            // Headers\r\n            const headers = {\r\n                \"Content-Type\": \"application/json\",\r\n                ...(options.csrf && csrfToken ? { \"X-CSRF-Token\": csrfToken } : {}),\r\n            };\r\n\r\n            try {\r\n                const response = await fetch(url, {\r\n                    method: \"POST\",\r\n                    headers: headers,\r\n                    body: JSON.stringify(data),\r\n                    credentials: \"include\"\r\n                });\r\n\r\n                if (!response.ok) {\r\n                    throw new Error(\r\n                        `Request failed with status: ${response.status}`\r\n                    );\r\n                }\r\n\r\n                const responseData = await response.json();\r\n\r\n                return responseData;\r\n                \r\n            } catch (error) {\r\n                console.error(\"Error during form submission:\", error);\r\n                return { error: error.message };\r\n            }\r\n        }\r\n\r\n        populateForm(data) {\r\n            for (let key in data) {\r\n                const field = this.element.querySelector(`[name=\"${key}\"]`);\r\n                field ? field.value = data[key] : null;\r\n            }\r\n        }\r\n    }\r\n\r\n    return new FormElement(object);\r\n}","export function wait(ms) {\r\n    return new Promise(resolve => setTimeout(resolve, ms));\r\n}","import $ from \"./modules/ribbon\";\r\nimport * as utils from \"./modules/utils\";\r\n\r\nconst Ruban = {\r\n    $,\r\n    ...utils,\r\n};\r\n\r\nexport default Ruban;\r\n\r\nif (typeof window !== \"undefined\") {\r\n    window.Ruban = window.Ruban || Ruban;\r\n    //window.$ = $; // Conflicts too often\r\n}\r\n\r\n(function (global) {\r\n    // Default configuration\r\n    const defaultConfig = {\r\n        debug: false,\r\n        forms: {\r\n            secure: false\r\n        }\r\n    };\r\n\r\n    // Ensure global config object exists\r\n    global.RubanConfig = global.RubanConfig || {};\r\n\r\n    // Check if RubanConfig manual object was correctly loaded\r\n    const isManualConfigLoaded = Object.keys(global.RubanConfig).length > 0;\r\n\r\n    // Check if `ruban.config.js` was loaded\r\n    // TODO:\r\n\r\n    // Merge config with priority\r\n    const mergeConfigs = (defaultConfig, userConfig) => {\r\n        const result = { ...defaultConfig };\r\n        Object.keys(userConfig).forEach((key) => {\r\n            if (userConfig[key] !== undefined) {\r\n                result[key] = userConfig[key];\r\n            }\r\n        });\r\n        return result;\r\n    };\r\n    const finalConfig = mergeConfigs(defaultConfig, global.RubanConfig);\r\n    global.RubanConfig = finalConfig;\r\n\r\n    // Check if config is valid\r\n    const hasValidConfig = Object.values(global.RubanConfig).some(val => val !== undefined);\r\n    if (!isManualConfigLoaded && !hasValidConfig) {\r\n        console.warn(\"[Ruban Warning]: No valid configuration found. Using default settings.\");\r\n    }\r\n    //console.log(\"Ruban before extension:\", global.Ruban);\r\n\r\n\r\n    if (finalConfig.debug) {\r\n        // Extend global Ruban object\r\n        Object.assign(global.Ruban, {\r\n            getConfig: () => finalConfig,\r\n            setConfig: (newConfig) => {\r\n                Object.assign(finalConfig, newConfig);\r\n                //global.manualRubanConfigSet = true;\r\n            },\r\n            log: (message) => console.log(`[Ruban Debug]: ${message}`)\r\n        });\r\n    }\r\n    \r\n    //console.log(\"Ruban after extension:\", global.Ruban);\r\n\r\n    if (!global.Ruban.__DOMContentLoaded) {\r\n       global.Ruban.__DOMContentLoaded = true;\r\n\r\n        document.addEventListener(\"DOMContentLoaded\", function () {\r\n\r\n            const forms = document.querySelectorAll('form[data-ruban-form-secure]');\r\n\r\n            if (forms.length) {\r\n\r\n                if (finalConfig.forms.secure) {\r\n                    /* forms.forEach((form) => {\r\n                        //console.log(form);\r\n\r\n                        if (typeof global.Ruban.secureForm === \"function\") {\r\n                            form.setAttribute(\"data-ruban-form-secure\", \"true\");\r\n                            try {\r\n                                global.Ruban.secureForm(form);\r\n                            } catch (error) {\r\n                                form.removeAttribute(\"data-ruban-form-secure\");\r\n                                finalConfig.debug ? console.warn(\"[Ruban Warning]: Could not secure form:\", form) : null;\r\n                            }\r\n                        } else {\r\n                            form.removeAttribute(\"data-ruban-form-secure\");\r\n                            console.warn(\"[Ruban Warning]: secureForm function not found. Make sure it is properly imported.\");\r\n                        }\r\n\r\n                        //form.querySelectorAll('[type=\"submit\"]').forEach((submitBtn) => {\r\n                            //console.log(submitBtn);\r\n                            //submitBtn.addEventListener(\"click\", function (event) {\r\n                            //    event.preventDefault();\r\n                                // TODO - Add submitForm function ?\r\n                                //if (typeof global.Ruban.submitForm === \"function\") {\r\n                                //    global.Ruban.submitForm(form);\r\n                                //} else {\r\n                                //    console.warn(\"[Ruban Warning]: submitForm function not found. Make sure it is properly imported.\");\r\n                                //}\r\n                            //});\r\n                        //});\r\n\r\n                        form.addEventListener(\"submit\", function (event) {\r\n                            console.log('form submit prevented');\r\n                            event.preventDefault();\r\n                            // TODO - Add submitForm function ?\r\n                            if (typeof global.Ruban.submitForm === \"function\") {\r\n                                global.Ruban.submitForm(form);\r\n                            } else {\r\n                                console.warn(\"[Ruban Warning]: submitForm function not found. Make sure it is properly imported.\");\r\n                            }\r\n                        });\r\n                    }); */\r\n                }\r\n                else {\r\n                    if (forms.length && finalConfig.debug) {\r\n                        console.warn(\"[Ruban Warning]: Forms were found to secure but the global variable to secure forms is set to false.\");\r\n                    }\r\n                }\r\n                    \r\n                // Only dispatch event if forms exist\r\n                //document.dispatchEvent(new Event(\"Ruban-Forms-Secured\"));\r\n\r\n            } else {\r\n                if (finalConfig.debug) {\r\n                    if (finalConfig.forms.secure) {\r\n                        console.warn(\"[Ruban Warning]: No forms were found to secure.\");\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    \r\n    console.log(\"Ruban is ready!\");\r\n\r\n})(window);\r\n\r\n// Protect Ruban from being overwritten\r\nObject.defineProperty(window, 'Ruban', {\r\n    value: window.Ruban,\r\n    writable: false,\r\n    configurable: false\r\n});","export default function $(object) {\r\n    \r\n    class DOMElement {\r\n\r\n        constructor(object) {\r\n            if (object[0] === \"#\") {\r\n                this.element = document.getElementById(object.slice(1));\r\n            } else {\r\n                this.element = document.querySelector(object);\r\n            }\r\n\r\n            if (!this.element) {\r\n                throw new Error(`Element not found: ${object}`);\r\n            }\r\n        }\r\n\r\n        // Method to get the inner text of the element\r\n        getText() {\r\n            return this.element.innerText;\r\n        }\r\n\r\n        // Method to get the label text of the element\r\n        getLabelText(index = 0) {\r\n            const inputName =\r\n                this.element.name ||\r\n                this.element.closest('form')?.querySelectorAll(\"input, select, textarea\")[index].name;\r\n            if (!inputName) return null;\r\n\r\n            const label = this.element.closest(\"form\")?.querySelector(`label[for=\"${inputName}\"]`);\r\n\r\n            return label ? label.innerText : null;\r\n        }\r\n        \r\n        // Method to set the inner text of the element\r\n        setText(text) {\r\n            this.element.innerText = text;\r\n        }\r\n\r\n        // Method to get the element's value (for inputs, etc.)\r\n        getValue() {\r\n            return this.element.value;\r\n        }\r\n\r\n        // Method to set the element's value (for inputs, etc.)\r\n        setValue(value) {\r\n            this.element.value = value;\r\n        }\r\n\r\n        // Method to add a class to the element\r\n        addClass(className) {\r\n            this.element.classList.add(className);\r\n        }\r\n\r\n        // Method to remove a class from the element\r\n        removeClass(className) {\r\n            this.element.classList.remove(className);\r\n        }\r\n\r\n        // Method to add an event listener to the element\r\n        on(event, callback) {\r\n            this.element.addEventListener(event, callback);\r\n        }\r\n\r\n    }\r\n\r\n    return new DOMElement(object);\r\n}"],"names":["NetworkError","_Error","message","_this","_classCallCheck","_callSuper","name","_inherits","_createClass","_wrapNativeSuper","Error","TimeoutError","_Error2","_this2","ValidationError","_Error3","_this3","sanis","inputString","replace","_get","_asyncToGenerator","_regeneratorRuntime","mark","_callee","url","options","_options$timeout","timeout","secretKey","controller","timeoutId","_options$headers","headers","_options$queryParams","queryParams","_options$includeCrede","includeCredentials","urlWithParams","response","responseData","_args","arguments","wrap","_context","prev","next","length","undefined","AbortController","setTimeout","abort","URL","Object","entries","forEach","_ref","_ref2","_slicedToArray","key","value","searchParams","append","concat","fetch","toString","method","_objectSpread","credentials","signal","sent","clearTimeout","ok","status","json","abrupt","t0","console","error","stop","apply","this","getFormData","formElement","formData","FormData","formObject","String","prototype","sanil","sanin","object","FormElement","element","document","getElementById","tagName","window","RubanConfig","debug","log","addEventListener","event","preventDefault","index","inputs","querySelectorAll","inputName","label","querySelector","innerText","_post","_document$querySelect","_document$querySelect2","_ref$data","data","_ref$options","_ref$url","csrfToken","csrf","textOnly","location","href","keys","fromEntries","Array","from","map","_ref3","content","body","JSON","stringify","field","get","_x","form","originalForm","every","submit","ms","Promise","resolve","Ruban","$","DOMElement","slice","_this$element$closest","_this$element$closest2","closest","text","className","classList","add","remove","callback","utils","global","isManualConfigLoaded","finalConfig","defaultConfig","userConfig","result","mergeConfigs","forms","secure","hasValidConfig","values","some","val","warn","assign","getConfig","setConfig","newConfig","__DOMContentLoaded","defineProperty","writable","configurable"],"mappings":"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"}