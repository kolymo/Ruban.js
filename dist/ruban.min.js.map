{"version":3,"file":"ruban.min.js","sources":["../src/modules/ribbon.js","../src/modules/utils/get.js","../src/modules/utils/sanitize.js","../src/modules/utils/form.js","../src/main.js"],"sourcesContent":["export default function $_(object) {\r\n    \r\n    class DOMElement {\r\n\r\n        constructor(object) {\r\n            if (object[0] === \"#\") {\r\n                this.element = document.getElementById(object.slice(1));\r\n            } else {\r\n                this.element = document.querySelector(object);\r\n            }\r\n\r\n            if (!this.element) {\r\n                throw new Error(`Element not found: ${object}`);\r\n            }\r\n        }\r\n\r\n        // Method to get the inner text of the element\r\n        getText() {\r\n            return this.element.innerText;\r\n        }\r\n\r\n        // Method to get the label text of the element\r\n        getLabelText(index = 0) {\r\n            const inputName =\r\n                this.element.name ||\r\n                this.parentElement.querySelectorAll(\"input, select, textarea\")[\r\n                    index\r\n                ].name;\r\n            if (!inputName) return null;\r\n\r\n            const label = this.element\r\n                .closest(\"form\")\r\n                ?.querySelector(`label[for=\"${inputId}\"]`);\r\n\r\n            return label ? label.innerText : null;\r\n        }\r\n        \r\n        // Method to set the inner text of the element\r\n        setText(text) {\r\n            this.element.innerText = text;\r\n        }\r\n\r\n        // Method to get the element's value (for inputs, etc.)\r\n        getValue() {\r\n            return this.element.value;\r\n        }\r\n\r\n        // Method to set the element's value (for inputs, etc.)\r\n        setValue(value) {\r\n            this.element.value = value;\r\n        }\r\n\r\n        // Method to add a class to the element\r\n        addClass(className) {\r\n            this.element.classList.add(className);\r\n        }\r\n\r\n        // Method to remove a class from the element\r\n        removeClass(className) {\r\n            this.element.classList.remove(className);\r\n        }\r\n\r\n        // Method to add an event listener to the element\r\n        on(event, callback) {\r\n            this.element.addEventListener(event, callback);\r\n        }\r\n\r\n    }\r\n\r\n    return new DOMElement(object);\r\n}","export default async function get(url) {\r\n    try {\r\n        const response = await fetch(url, {\r\n            method: \"GET\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n        });\r\n\r\n        if (!response.ok) {\r\n            throw new Error(`Request failed with status: ${response.status}`);\r\n        }\r\n\r\n        const responseData = await response.json();\r\n        return responseData;\r\n\r\n    } catch (error) {\r\n        console.error(\"Error:\", error);\r\n        return { error: error.message };\r\n    }\r\n}\r\n","// Sanitize Input String (Letters and Numbers Only)\r\nexport function sanis(inputString) {\r\n    return inputString.replace(/[^a-zA-Z0-9]/g, \"\");\r\n}\r\n\r\n// Sanitize Input Letters Only\r\nexport function sanil(inputString) {\r\n    return inputString.replace(/[^a-zA-Z]/g, \"\");\r\n}\r\n\r\n// Sanitize Input Numbers Only\r\nexport function sanin(inputString) {\r\n    return inputString.replace(/[^0-9]/g, \"\");\r\n}\r\n\r\n// Extend String prototype with the custom sanitization methods\r\nString.prototype.sanis = function () {\r\n    return this.replace(/[^a-zA-Z0-9]/g, \"\");\r\n};\r\n\r\nString.prototype.sanil = function () {\r\n    return this.replace(/[^a-zA-Z]/g, \"\");\r\n};\r\n\r\nString.prototype.sanin = function () {\r\n    return this.replace(/[^0-9]/g, \"\");\r\n};\r\n","export default function form(object) {\r\n    class FormElement {\r\n        constructor(object) {\r\n            this.element = document.getElementById(object);\r\n\r\n            if (!this.element) {\r\n                throw new Error(`Element not found: ${object}`);\r\n            }\r\n\r\n            if (this.element.tagName !== \"FORM\") {\r\n                throw new Error(\"Element is not a form.\");\r\n            }\r\n        }\r\n\r\n        async post(url, data = {}) {\r\n            // Convert form data into an object if not passed\r\n            if (Object.keys(data).length === 0) {\r\n                data = new FormData(this.element);\r\n                // Iterate over FormData entries and convert to object\r\n                data = Object.fromEntries(data.entries());\r\n            }\r\n\r\n            try {\r\n                const response = await fetch(url, {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\",\r\n                    },\r\n                    body: JSON.stringify(data),\r\n                });\r\n\r\n                if (!response.ok) {\r\n                    throw new Error(\r\n                        `Request failed with status: ${response.status}`\r\n                    );\r\n                }\r\n\r\n                const responseData = await response.json();\r\n\r\n                return responseData;\r\n                \r\n            } catch (error) {\r\n                console.error(\"Error during form submission:\", error);\r\n                return { error: error.message };\r\n            }\r\n        }\r\n\r\n        async get(url, params = {}) {\r\n            try {\r\n                // Construct query string from params object\r\n                const queryString = new URLSearchParams(params).toString();\r\n                const fullUrl = `${url}?${queryString}`;\r\n\r\n                const response = await fetch(fullUrl, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\",\r\n                    },\r\n                });\r\n\r\n                if (!response.ok) {\r\n                    throw new Error(\r\n                        `Request failed with status: ${response.status}`\r\n                    );\r\n                }\r\n\r\n                const responseData = await response.json();\r\n\r\n                // Automatically populate the form with the retrieved data\r\n                this.populateForm(responseData);\r\n\r\n                return responseData;\r\n            } catch (error) {\r\n                console.error(\"Error during GET request:\", error);\r\n                return { error: error.message };\r\n            }\r\n        }\r\n\r\n        populateForm(data) {\r\n            for (let key in data) {\r\n                const field = this.element.querySelector(`[name=\"${key}\"]`);\r\n                field ? field.value = data[key] : null;\r\n            }\r\n        }\r\n    }\r\n\r\n    return new FormElement(object);\r\n}\r\n","import $_ from './modules/ribbon';\r\nimport * as utils from './modules/utils';\r\n\r\nconst Ruban = {\r\n  $_,\r\n  ...utils,\r\n};\r\n\r\n\r\nexport default Ruban;\r\n\r\n\r\nif (typeof window !== 'undefined') {\r\n  window.Ruban = Ruban;\r\n  window.$_ = $_;\r\n  window.$ = $_;\r\n}"],"names":["$_","object","DOMElement","_createClass","_classCallCheck","this","element","document","getElementById","slice","querySelector","Error","concat","key","value","innerText","_this$element$closest","index","arguments","length","undefined","name","parentElement","querySelectorAll","label","closest","inputId","text","className","classList","add","remove","event","callback","addEventListener","_get","_asyncToGenerator","_regeneratorRuntime","mark","_callee","url","response","responseData","wrap","_context","prev","next","fetch","method","headers","sent","ok","status","json","abrupt","t0","console","error","message","stop","apply","String","prototype","sanis","replace","sanil","sanin","FormElement","tagName","_post","data","_args","Object","keys","FormData","fromEntries","entries","body","JSON","stringify","_x","_callee2","params","queryString","fullUrl","_args2","_context2","URLSearchParams","toString","populateForm","_x2","field","get","inputString","Ruban","_objectSpread","utils","window","$"],"mappings":"y5PAAe,SAASA,EAAGC,GAAQ,IAEzBC,EAAU,WAcZ,OAAAC,GAZA,SAAAD,EAAYD,GAOR,GAPgBG,OAAAF,GACE,MAAdD,EAAO,GACPI,KAAKC,QAAUC,SAASC,eAAeP,EAAOQ,MAAM,IAEpDJ,KAAKC,QAAUC,SAASG,cAAcT,IAGrCI,KAAKC,QACN,MAAM,IAAIK,MAAK,sBAAAC,OAAuBX,GAE9C,GAEA,CAAA,CAAAY,IAAA,UAAAC,MACA,WACI,OAAOT,KAAKC,QAAQS,SACxB,GAEA,CAAAF,IAAA,eAAAC,MACA,WAAwB,IAAAE,EAAXC,EAAKC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,EAMjB,KAJIb,KAAKC,QAAQe,MACbhB,KAAKiB,cAAcC,iBAAiB,2BAChCN,GACFI,MACU,OAAO,KAEvB,IAAMG,EACcR,QADTA,EAAGX,KAAKC,QACdmB,QAAQ,eADCT,IACMA,OADNA,EAAAA,EAERN,4BAAaE,OAAec,QAAO,OAEzC,OAAOF,EAAQA,EAAMT,UAAY,IACrC,GAEA,CAAAF,IAAA,UAAAC,MACA,SAAQa,GACJtB,KAAKC,QAAQS,UAAYY,CAC7B,GAEA,CAAAd,IAAA,WAAAC,MACA,WACI,OAAOT,KAAKC,QAAQQ,KACxB,GAEA,CAAAD,IAAA,WAAAC,MACA,SAASA,GACLT,KAAKC,QAAQQ,MAAQA,CACzB,GAEA,CAAAD,IAAA,WAAAC,MACA,SAASc,GACLvB,KAAKC,QAAQuB,UAAUC,IAAIF,EAC/B,GAEA,CAAAf,IAAA,cAAAC,MACA,SAAYc,GACRvB,KAAKC,QAAQuB,UAAUE,OAAOH,EAClC,GAEA,CAAAf,IAAA,KAAAC,MACA,SAAGkB,EAAOC,GACN5B,KAAKC,QAAQ4B,iBAAiBF,EAAOC,EACzC,IAAC,CA/DW,GAmEhB,OAAO,IAAI/B,EAAWD,EAC1B,CClDC,SAAAkC,IAAA,OAAAA,EAAAC,EAAAC,IAAAC,MApBc,SAAAC,EAAmBC,GAAG,IAAAC,EAAAC,EAAA,OAAAL,IAAAM,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,KAAA,EAAA,OAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAENC,MAAMP,EAAK,CAC9BQ,OAAQ,MACRC,QAAS,CACL,eAAgB,sBAEtB,KAAA,EALY,IAARR,EAAQG,EAAAM,MAOAC,GAAE,CAAAP,EAAAE,KAAA,EAAA,KAAA,CAAA,MACN,IAAInC,MAAKC,+BAAAA,OAAgC6B,EAASW,SAAS,KAAA,EAAA,OAAAR,EAAAE,KAAA,EAG1CL,EAASY,OAAM,KAAA,EAAxB,OAAZX,EAAYE,EAAAM,KAAAN,EAAAU,OAAA,SACXZ,GAAY,KAAA,GAGY,OAHZE,EAAAC,KAAA,GAAAD,EAAAW,GAAAX,EAAA,MAAA,GAGnBY,QAAQC,MAAM,SAAQb,EAAAW,IAASX,EAAAU,OACxB,SAAA,CAAEG,MAAOb,EAAAW,GAAMG,UAAS,KAAA,GAAA,IAAA,MAAA,OAAAd,EAAAe,OAAA,GAAApB,EAAA,KAAA,CAAA,CAAA,EAAA,KAEtC,MAAAqB,MAAAvD,KAAAa,UAAA,CCJD2C,OAAOC,UAAUC,MAAQ,WACrB,OAAO1D,KAAK2D,QAAQ,gBAAiB,GACzC,EAEAH,OAAOC,UAAUG,MAAQ,WACrB,OAAO5D,KAAK2D,QAAQ,aAAc,GACtC,EAEAH,OAAOC,UAAUI,MAAQ,WACrB,OAAO7D,KAAK2D,QAAQ,UAAW,GACnC,2CC1Be,SAAc/D,GAAQ,IAC3BkE,EAAW,WAWZ,OAAAhE,GAVD,SAAAgE,EAAYlE,GAGR,GAHgBG,OAAA+D,GAChB9D,KAAKC,QAAUC,SAASC,eAAeP,IAElCI,KAAKC,QACN,MAAM,IAAIK,MAAK,sBAAAC,OAAuBX,IAG1C,GAA6B,SAAzBI,KAAKC,QAAQ8D,QACb,MAAM,IAAIzD,MAAM,yBAExB,GAAC,CAAA,CAAAE,IAAA,OAAAC,OAAAuD,EAAAjC,EAAAC,IAAAC,MAED,SAAAC,EAAWC,GAAG,IAAA8B,EAAA7B,EAAAC,EAAA6B,EAAArD,UAAA,OAAAmB,IAAAM,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,KAAA,EAMT,OANWwB,EAAIC,EAAApD,OAAAoD,QAAAnD,IAAAmD,EAAAnD,GAAAmD,EAAG,GAAA,CAAA,EAEc,IAA7BC,OAAOC,KAAKH,GAAMnD,SAClBmD,EAAO,IAAII,SAASrE,KAAKC,SAEzBgE,EAAOE,OAAOG,YAAYL,EAAKM,YAClChC,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAG0BC,MAAMP,EAAK,CAC9BQ,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpB4B,KAAMC,KAAKC,UAAUT,KACvB,KAAA,EANY,IAAR7B,EAAQG,EAAAM,MAQAC,GAAE,CAAAP,EAAAE,KAAA,EAAA,KAAA,CAAA,MACN,IAAInC,MAAKC,+BAAAA,OACoB6B,EAASW,SAC3C,KAAA,EAAA,OAAAR,EAAAE,KAAA,GAGsBL,EAASY,OAAM,KAAA,GAAxB,OAAZX,EAAYE,EAAAM,KAAAN,EAAAU,OAAA,SAEXZ,GAAY,KAAA,GAGmC,OAHnCE,EAAAC,KAAA,GAAAD,EAAAW,GAAAX,EAAA,MAAA,GAGnBY,QAAQC,MAAM,gCAA+Bb,EAAAW,IAASX,EAAAU,OAC/C,SAAA,CAAEG,MAAOb,EAAAW,GAAMG,UAAS,KAAA,GAAA,IAAA,MAAA,OAAAd,EAAAe,OAAA,GAAApB,EAAAlC,KAAA,CAAA,CAAA,EAAA,KAEtC,KAAA,SA/BS2E,GAAA,OAAAX,EAAAT,MAAAvD,KAAAa,UAAA,IAAA,CAAAL,IAAA,MAAAC,MAAA,WAAA,IAAAqB,EAAAC,EAAAC,IAAAC,MAiCV,SAAA2C,EAAUzC,GAAG,IAAA0C,EAAAC,EAAAC,EAAA3C,EAAAC,EAAA2C,EAAAnE,UAAA,OAAAmB,IAAAM,MAAA,SAAA2C,GAAA,cAAAA,EAAAzC,KAAAyC,EAAAxC,MAAA,KAAA,EAIgC,OAJ9BoC,EAAMG,EAAAlE,OAAAkE,QAAAjE,IAAAiE,EAAAjE,GAAAiE,EAAG,GAAA,CAAA,EAAEC,EAAAzC,KAAA,EAGZsC,EAAc,IAAII,gBAAgBL,GAAQM,WAC1CJ,KAAOxE,OAAM4B,EAAG5B,KAAAA,OAAIuE,GAAWG,EAAAxC,KAAA,EAEdC,MAAMqC,EAAS,CAClCpC,OAAQ,MACRC,QAAS,CACL,eAAgB,sBAEtB,KAAA,EALY,IAARR,EAAQ6C,EAAApC,MAOAC,GAAE,CAAAmC,EAAAxC,KAAA,EAAA,KAAA,CAAA,MACN,IAAInC,MAAKC,+BAAAA,OACoB6B,EAASW,SAC3C,KAAA,EAAA,OAAAkC,EAAAxC,KAAA,GAGsBL,EAASY,OAAM,KAAA,GAGV,OAH1BX,EAAY4C,EAAApC,KAGlB7C,KAAKoF,aAAa/C,GAAc4C,EAAAhC,OAAA,SAEzBZ,GAAY,KAAA,GAE+B,OAF/B4C,EAAAzC,KAAA,GAAAyC,EAAA/B,GAAA+B,EAAA,MAAA,GAEnB9B,QAAQC,MAAM,4BAA2B6B,EAAA/B,IAAS+B,EAAAhC,OAC3C,SAAA,CAAEG,MAAO6B,EAAA/B,GAAMG,UAAS,KAAA,GAAA,IAAA,MAAA,OAAA4B,EAAA3B,OAAA,GAAAsB,EAAA5E,KAAA,CAAA,CAAA,EAAA,KAEtC,KA7BQ,OA6BR,SA7BQqF,GAAA,OAAAvD,EAAAyB,MAAAvD,KAAAa,UAAA,CAAA,CAjCC,IAiCD,CAAAL,IAAA,eAAAC,MA+BT,SAAawD,GACT,IAAK,IAAIzD,KAAOyD,EAAM,CAClB,IAAMqB,EAAQtF,KAAKC,QAAQI,cAAa,UAAAE,OAAWC,EAAG,OACtD8E,IAAQA,EAAM7E,MAAQwD,EAAKzD,GAC/B,CACJ,KAvEC,IAAAwD,CAuEA,CAlFY,GAqFjB,OAAO,IAAIF,EAAYlE,EAC3B,MFvF8B2F,SAAGZ,GAAA,OAAA7C,EAAAyB,MAAAvD,KAAAa,UAAA,QCC1B,SAAe2E,GAClB,OAAOA,EAAY7B,QAAQ,gBAAiB,GAChD,QAGO,SAAe6B,GAClB,OAAOA,EAAY7B,QAAQ,aAAc,GAC7C,QAGO,SAAe6B,GAClB,OAAOA,EAAY7B,QAAQ,UAAW,GAC1C,IEVM8B,iWAAKC,CAAA,CACT/F,GAAAA,GACGgG,SAOiB,oBAAXC,SACTA,OAAOH,MAAQA,EACfG,OAAOjG,GAAKA,EACZiG,OAAOC,EAAIlG"}