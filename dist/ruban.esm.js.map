{"version":3,"file":"ruban.esm.js","sources":["../src/modules/ribbon.js","../src/modules/utils/errors.js","../src/modules/utils/sanitize.js","../src/modules/utils/form.js","../src/modules/utils/http.js","../src/modules/utils/secure-form.js","../src/modules/utils/time.js","../src/main.js"],"sourcesContent":["export default function $(object) {\r\n    \r\n    class DOMElement {\r\n\r\n        constructor(object) {\r\n            if (object[0] === \"#\") {\r\n                this.element = document.getElementById(object.slice(1));\r\n            } else {\r\n                this.element = document.querySelector(object);\r\n            }\r\n\r\n            if (!this.element) {\r\n                throw new Error(`Element not found: ${object}`);\r\n            }\r\n        }\r\n\r\n        // Method to get the inner text of the element\r\n        getText() {\r\n            return this.element.innerText;\r\n        }\r\n\r\n        // Method to get the label text of the element\r\n        getLabelText(index = 0) {\r\n            const inputName =\r\n                this.element.name ||\r\n                this.element.closest('form')?.querySelectorAll(\"input, select, textarea\")[index].name;\r\n            if (!inputName) return null;\r\n\r\n            const label = this.element.closest(\"form\")?.querySelector(`label[for=\"${inputName}\"]`);\r\n\r\n            return label ? label.innerText : null;\r\n        }\r\n        \r\n        // Method to set the inner text of the element\r\n        setText(text) {\r\n            this.element.innerText = text;\r\n        }\r\n\r\n        // Method to get the element's value (for inputs, etc.)\r\n        getValue() {\r\n            return this.element.value;\r\n        }\r\n\r\n        // Method to set the element's value (for inputs, etc.)\r\n        setValue(value) {\r\n            this.element.value = value;\r\n        }\r\n\r\n        // Method to add a class to the element\r\n        addClass(className) {\r\n            this.element.classList.add(className);\r\n        }\r\n\r\n        // Method to remove a class from the element\r\n        removeClass(className) {\r\n            this.element.classList.remove(className);\r\n        }\r\n\r\n        // Method to add an event listener to the element\r\n        on(event, callback) {\r\n            this.element.addEventListener(event, callback);\r\n        }\r\n\r\n    }\r\n\r\n    return new DOMElement(object);\r\n}","export class NetworkError extends Error {\r\n    constructor(message) {\r\n        super(message);\r\n        this.name = \"NetworkError\";\r\n    }\r\n}\r\n\r\nexport class TimeoutError extends Error {\r\n    constructor(message) {\r\n        super(message);\r\n        this.name = \"TimeoutError\";\r\n    }\r\n}\r\n\r\nexport class ValidationError extends Error {\r\n    constructor(message) {\r\n        super(message);\r\n        this.name = \"ValidationError\";\r\n    }\r\n}","// Sanitize Input String (Letters and Numbers Only)\r\nexport function sanis(inputString) {\r\n    return inputString.replace(/[^a-zA-Z0-9]/g, \"\");\r\n}\r\n\r\n// Sanitize Input Letters Only\r\nexport function sanil(inputString) {\r\n    return inputString.replace(/[^a-zA-Z]/g, \"\");\r\n}\r\n\r\n// Sanitize Input Numbers Only\r\nexport function sanin(inputString) {\r\n    return inputString.replace(/[^0-9]/g, \"\");\r\n}\r\n\r\n// Extend String prototype with the custom sanitization methods\r\nString.prototype.sanis = function () {\r\n    return this.replace(/[^a-zA-Z0-9]/g, \"\");\r\n};\r\n\r\nString.prototype.sanil = function () {\r\n    return this.replace(/[^a-zA-Z]/g, \"\");\r\n};\r\n\r\nString.prototype.sanin = function () {\r\n    return this.replace(/[^0-9]/g, \"\");\r\n};\r\n","import { sanis, sanil, sanin } from './sanitize.js';\r\n\r\n\r\nexport default function form(object) {\r\n    class FormElement {\r\n        constructor(object) {\r\n            this.element = document.getElementById(object);\r\n\r\n            if (!this.element) {\r\n                throw new Error(`Element not found: ${object}`);\r\n            }\r\n\r\n            if (this.element.tagName !== \"FORM\") {\r\n                throw new Error(\"Element is not a form.\");\r\n            }\r\n\r\n            if (window.RubanConfig.debug) {\r\n                console.log('Constructor', this.element);\r\n            }\r\n\r\n            \r\n            this.element.addEventListener('submit', function (event) {\r\n                event.preventDefault();\r\n                (window.RubanConfig.debug) ? console.log('Constructor Form Submission Prevented') : null;\r\n\r\n                \r\n            });\r\n        }\r\n\r\n        getLabelText(index = 0) {\r\n            const inputs = this.element.querySelectorAll(\"input, select, textarea\");\r\n            if (index >= inputs.length) return null;\r\n\r\n            const inputName = inputs[index].name;\r\n            if (!inputName) return null;\r\n\r\n            const label = this.element.querySelector(`label[for=\"${inputName}\"]`);\r\n            return label ? label.innerText : null;\r\n        }\r\n\r\n        async post({ data = {}, options = { csrf: true, textOnly: false }, url = window.location.href } = {}) {\r\n\r\n            // Convert form data into an object if not passed\r\n            if (Object.keys(data).length === 0) {\r\n                data = new FormData(this.element);\r\n                // Iterate over FormData entries and convert to object\r\n                //data = Object.fromEntries(data.entries());\r\n                // Sanitize each input value\r\n                data = Object.fromEntries(\r\n                    Array.from(data.entries()).map(([key, value]) => [\r\n                        key,\r\n                        options.textOnly ? sanis(value) : value,\r\n                    ])\r\n                );\r\n            }\r\n\r\n            // TODO: Check if there was already one in the formData\r\n            // Check for CSRF token\r\n            let csrfToken = document.querySelector('meta[name=\"csrf-token\"]')?.content || \r\n            document.querySelector('input[name*=\"csrf\"]')?.value;\r\n\r\n            if (!csrfToken && options.csrf) {\r\n            throw new Error(\"CSRF token not found.\");\r\n            }\r\n\r\n\r\n            // Headers\r\n            const headers = {\r\n                \"Content-Type\": \"application/json\",\r\n                ...(options.csrf && csrfToken ? { \"X-CSRF-Token\": csrfToken } : {}),\r\n            };\r\n\r\n            try {\r\n                const response = await fetch(url, {\r\n                    method: \"POST\",\r\n                    headers: headers,\r\n                    body: JSON.stringify(data),\r\n                    credentials: \"include\"\r\n                });\r\n\r\n                if (!response.ok) {\r\n                    throw new Error(\r\n                        `Request failed with status: ${response.status}`\r\n                    );\r\n                }\r\n\r\n                const responseData = await response.json();\r\n\r\n                return responseData;\r\n                \r\n            } catch (error) {\r\n                console.error(\"Error during form submission:\", error);\r\n                return { error: error.message };\r\n            }\r\n        }\r\n\r\n        populateForm(data) {\r\n            for (let key in data) {\r\n                const field = this.element.querySelector(`[name=\"${key}\"]`);\r\n                field ? field.value = data[key] : null;\r\n            }\r\n        }\r\n    }\r\n\r\n    return new FormElement(object);\r\n}","import { NetworkError, TimeoutError } from \"./errors\";\r\n\r\nexport async function get(url, options = {}) {\r\n    const { timeout = 7500, secretKey } = options;\r\n    const controller = new AbortController();\r\n    const timeoutId = setTimeout(() => controller.abort(), timeout);\r\n\r\n    const {\r\n        headers = {},\r\n        queryParams = {},\r\n        includeCredentials = false,\r\n    } = options;\r\n\r\n    try {\r\n        // Validate URL\r\n        if (!url || typeof url !== \"string\") {\r\n            throw new Error(\"Invalid URL provided.\");\r\n        }\r\n\r\n        // Append query parameters to the URL\r\n        const urlWithParams = new URL(url);\r\n        Object.entries(queryParams).forEach(([key, value]) => {\r\n            urlWithParams.searchParams.append(key, value);\r\n        });\r\n\r\n        // Add secret key to headers if provided\r\n        if (secretKey) {\r\n            headers[\"Authorization\"] = `Bearer ${secretKey}`;\r\n        }\r\n\r\n        // Make the request\r\n        const response = await fetch(urlWithParams.toString(), {\r\n            method: \"GET\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                ...headers,\r\n            },\r\n            credentials: includeCredentials ? \"include\" : \"omit\",\r\n            signal: controller.signal,\r\n        });\r\n\r\n        // Clear the timeout\r\n        clearTimeout(timeoutId);\r\n\r\n        // Check for HTTP errors\r\n        if (!response.ok) {\r\n            throw new NetworkError(`Request failed with status: ${response.status}`);\r\n        }\r\n\r\n        // Parse and return the response data\r\n        const responseData = await response.json();\r\n        return responseData;\r\n\r\n    } catch (error) {\r\n        if (error instanceof NetworkError) {\r\n            console.error(\"Network error:\", error.message);\r\n        } else if (error instanceof TimeoutError) {\r\n            console.error(\"Timeout error:\", error.message);\r\n        } else {\r\n            console.error(\"Unknown error:\", error);\r\n        }\r\n        throw error;\r\n    }\r\n}","import { ValidationError } from \"./errors\";\r\n\r\nfunction getFormData(formElement) {\r\n    const formData = new FormData(formElement);\r\n    const formObject = {};\r\n\r\n    formData.forEach((value, key) => {\r\n        formObject[key] = value;\r\n    });\r\n\r\n    return formObject;\r\n}\r\n\r\nexport default function secureForm(form) {\r\n    // Setup legit version of form\r\n    const originalForm = getFormData(form);\r\n    console.log('Original form:', originalForm);\r\n\r\n    // Listen for form submission\r\n    form.addEventListener('submit', (event) => {\r\n        event.preventDefault();\r\n        \r\n        const formObject = getFormData(form);\r\n        console.log('Form object:', formObject);\r\n\r\n        // Compare all keys/name(inputs)\r\n        const isFormSecure = Object.keys(formObject).every((key) => {\r\n            return key in originalForm;\r\n        });\r\n\r\n        if (isFormSecure) {\r\n            form.submit();\r\n        } else {\r\n            throw new ValidationError('Form is not secure or has been modified!');\r\n        }\r\n    });\r\n}","export function wait(ms) {\r\n    return new Promise(resolve => setTimeout(resolve, ms));\r\n}","import $ from \"./modules/ribbon\";\r\nimport * as utils from \"./modules/utils\";\r\n\r\nconst Ruban = {\r\n    $,\r\n    ...utils,\r\n};\r\n\r\nexport default Ruban;\r\n\r\nif (typeof window !== \"undefined\") {\r\n    window.Ruban = window.Ruban || Ruban;\r\n    //window.$ = $; // Conflicts too often\r\n}\r\n\r\n(function (global) {\r\n    // Default configuration\r\n    const defaultConfig = {\r\n        debug: false,\r\n        forms: {\r\n            secure: false\r\n        }\r\n    };\r\n\r\n    // Ensure global config object exists\r\n    global.RubanConfig = global.RubanConfig || {};\r\n\r\n    // Check if RubanConfig manual object was correctly loaded\r\n    const isManualConfigLoaded = Object.keys(global.RubanConfig).length > 0;\r\n\r\n    // Check if `ruban.config.js` was loaded\r\n    // TODO:\r\n\r\n    // Merge config with priority\r\n    const mergeConfigs = (defaultConfig, userConfig) => {\r\n        const result = { ...defaultConfig };\r\n        Object.keys(userConfig).forEach((key) => {\r\n            if (userConfig[key] !== undefined) {\r\n                result[key] = userConfig[key];\r\n            }\r\n        });\r\n        return result;\r\n    };\r\n    const finalConfig = mergeConfigs(defaultConfig, global.RubanConfig);\r\n    global.RubanConfig = finalConfig;\r\n\r\n    // Check if config is valid\r\n    const hasValidConfig = Object.values(global.RubanConfig).some(val => val !== undefined);\r\n    if (!isManualConfigLoaded && !hasValidConfig) {\r\n        console.warn(\"[Ruban Warning]: No valid configuration found. Using default settings.\");\r\n    }\r\n    //console.log(\"Ruban before extension:\", global.Ruban);\r\n\r\n\r\n    if (finalConfig.debug) {\r\n        // Extend global Ruban object\r\n        Object.assign(global.Ruban, {\r\n            getConfig: () => finalConfig,\r\n            setConfig: (newConfig) => {\r\n                Object.assign(finalConfig, newConfig);\r\n                //global.manualRubanConfigSet = true;\r\n            },\r\n            log: (message) => console.log(`[Ruban Debug]: ${message}`)\r\n        });\r\n    }\r\n    \r\n    //console.log(\"Ruban after extension:\", global.Ruban);\r\n\r\n    if (!global.Ruban.__DOMContentLoaded) {\r\n       global.Ruban.__DOMContentLoaded = true;\r\n\r\n        document.addEventListener(\"DOMContentLoaded\", function () {\r\n\r\n            const forms = document.querySelectorAll('form[data-ruban-form-secure]');\r\n\r\n            if (forms.length) {\r\n\r\n                if (finalConfig.forms.secure) {\r\n                    /* forms.forEach((form) => {\r\n                        //console.log(form);\r\n\r\n                        if (typeof global.Ruban.secureForm === \"function\") {\r\n                            form.setAttribute(\"data-ruban-form-secure\", \"true\");\r\n                            try {\r\n                                global.Ruban.secureForm(form);\r\n                            } catch (error) {\r\n                                form.removeAttribute(\"data-ruban-form-secure\");\r\n                                finalConfig.debug ? console.warn(\"[Ruban Warning]: Could not secure form:\", form) : null;\r\n                            }\r\n                        } else {\r\n                            form.removeAttribute(\"data-ruban-form-secure\");\r\n                            console.warn(\"[Ruban Warning]: secureForm function not found. Make sure it is properly imported.\");\r\n                        }\r\n\r\n                        //form.querySelectorAll('[type=\"submit\"]').forEach((submitBtn) => {\r\n                            //console.log(submitBtn);\r\n                            //submitBtn.addEventListener(\"click\", function (event) {\r\n                            //    event.preventDefault();\r\n                                // TODO - Add submitForm function ?\r\n                                //if (typeof global.Ruban.submitForm === \"function\") {\r\n                                //    global.Ruban.submitForm(form);\r\n                                //} else {\r\n                                //    console.warn(\"[Ruban Warning]: submitForm function not found. Make sure it is properly imported.\");\r\n                                //}\r\n                            //});\r\n                        //});\r\n\r\n                        form.addEventListener(\"submit\", function (event) {\r\n                            console.log('form submit prevented');\r\n                            event.preventDefault();\r\n                            // TODO - Add submitForm function ?\r\n                            if (typeof global.Ruban.submitForm === \"function\") {\r\n                                global.Ruban.submitForm(form);\r\n                            } else {\r\n                                console.warn(\"[Ruban Warning]: submitForm function not found. Make sure it is properly imported.\");\r\n                            }\r\n                        });\r\n                    }); */\r\n                }\r\n                else {\r\n                    if (forms.length && finalConfig.debug) {\r\n                        console.warn(\"[Ruban Warning]: Forms were found to secure but the global variable to secure forms is set to false.\");\r\n                    }\r\n                }\r\n                    \r\n                // Only dispatch event if forms exist\r\n                //document.dispatchEvent(new Event(\"Ruban-Forms-Secured\"));\r\n\r\n            } else {\r\n                if (finalConfig.debug) {\r\n                    if (finalConfig.forms.secure) {\r\n                        console.warn(\"[Ruban Warning]: No forms were found to secure.\");\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    \r\n    console.log(\"Ruban is ready!\");\r\n\r\n})(window);\r\n\r\n// Protect Ruban from being overwritten\r\nObject.defineProperty(window, 'Ruban', {\r\n    value: window.Ruban,\r\n    writable: false,\r\n    configurable: false\r\n});"],"names":["$","object","DOMElement","_classCallCheck","element","document","getElementById","slice","querySelector","Error","concat","_createClass","key","value","getText","innerText","getLabelText","_this$element$closest","_this$element$closest2","index","arguments","length","undefined","inputName","name","closest","querySelectorAll","label","setText","text","getValue","setValue","addClass","className","classList","add","removeClass","remove","on","event","callback","addEventListener","NetworkError","_Error","message","_this","_callSuper","_inherits","_wrapNativeSuper","TimeoutError","_Error2","_this2","ValidationError","_Error3","_this3","sanis","inputString","replace","sanil","sanin","String","prototype","form","FormElement","tagName","window","RubanConfig","debug","console","log","preventDefault","inputs","_post","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_document$querySelect","_document$querySelect2","_ref","_ref$data","data","_ref$options","options","_ref$url","url","csrfToken","headers","response","responseData","_args","wrap","_callee$","_context","prev","next","csrf","textOnly","location","href","Object","keys","FormData","fromEntries","Array","from","entries","map","_ref2","_ref3","_slicedToArray","content","_objectSpread","fetch","method","body","JSON","stringify","credentials","sent","ok","status","json","abrupt","t0","error","stop","post","apply","populateForm","field","get","_x","_get","_options$timeout","timeout","secretKey","controller","timeoutId","_options$headers","_options$queryParams","queryParams","_options$includeCrede","includeCredentials","urlWithParams","AbortController","setTimeout","abort","URL","forEach","searchParams","append","toString","signal","clearTimeout","getFormData","formElement","formData","formObject","secureForm","originalForm","isFormSecure","every","submit","wait","ms","Promise","resolve","Ruban","utils","global","defaultConfig","forms","secure","isManualConfigLoaded","mergeConfigs","userConfig","result","finalConfig","hasValidConfig","values","some","val","warn","assign","getConfig","setConfig","newConfig","__DOMContentLoaded","defineProperty","writable","configurable"],"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"}