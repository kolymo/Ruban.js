{"version":3,"file":"ruban.esm.js","sources":["../src/modules/ribbon.js","../src/modules/utils/sanitize.js","../src/modules/utils/form.js","../src/modules/utils/errors.js","../src/modules/utils/http.js","../src/main.js"],"sourcesContent":["export default function $_(object) {\r\n    \r\n    class DOMElement {\r\n\r\n        constructor(object) {\r\n            if (object[0] === \"#\") {\r\n                this.element = document.getElementById(object.slice(1));\r\n            } else {\r\n                this.element = document.querySelector(object);\r\n            }\r\n\r\n            if (!this.element) {\r\n                throw new Error(`Element not found: ${object}`);\r\n            }\r\n        }\r\n\r\n        // Method to get the inner text of the element\r\n        getText() {\r\n            return this.element.innerText;\r\n        }\r\n\r\n        // Method to get the label text of the element\r\n        getLabelText(index = 0) {\r\n            const inputName =\r\n                this.element.name ||\r\n                this.parentElement.querySelectorAll(\"input, select, textarea\")[\r\n                    index\r\n                ].name;\r\n            if (!inputName) return null;\r\n\r\n            const label = this.element\r\n                .closest(\"form\")\r\n                ?.querySelector(`label[for=\"${inputId}\"]`);\r\n\r\n            return label ? label.innerText : null;\r\n        }\r\n        \r\n        // Method to set the inner text of the element\r\n        setText(text) {\r\n            this.element.innerText = text;\r\n        }\r\n\r\n        // Method to get the element's value (for inputs, etc.)\r\n        getValue() {\r\n            return this.element.value;\r\n        }\r\n\r\n        // Method to set the element's value (for inputs, etc.)\r\n        setValue(value) {\r\n            this.element.value = value;\r\n        }\r\n\r\n        // Method to add a class to the element\r\n        addClass(className) {\r\n            this.element.classList.add(className);\r\n        }\r\n\r\n        // Method to remove a class from the element\r\n        removeClass(className) {\r\n            this.element.classList.remove(className);\r\n        }\r\n\r\n        // Method to add an event listener to the element\r\n        on(event, callback) {\r\n            this.element.addEventListener(event, callback);\r\n        }\r\n\r\n    }\r\n\r\n    return new DOMElement(object);\r\n}","// Sanitize Input String (Letters and Numbers Only)\r\nexport function sanis(inputString) {\r\n    return inputString.replace(/[^a-zA-Z0-9]/g, \"\");\r\n}\r\n\r\n// Sanitize Input Letters Only\r\nexport function sanil(inputString) {\r\n    return inputString.replace(/[^a-zA-Z]/g, \"\");\r\n}\r\n\r\n// Sanitize Input Numbers Only\r\nexport function sanin(inputString) {\r\n    return inputString.replace(/[^0-9]/g, \"\");\r\n}\r\n\r\n// Extend String prototype with the custom sanitization methods\r\nString.prototype.sanis = function () {\r\n    return this.replace(/[^a-zA-Z0-9]/g, \"\");\r\n};\r\n\r\nString.prototype.sanil = function () {\r\n    return this.replace(/[^a-zA-Z]/g, \"\");\r\n};\r\n\r\nString.prototype.sanin = function () {\r\n    return this.replace(/[^0-9]/g, \"\");\r\n};\r\n","import { sanis, sanil, sanin } from './sanitize.js';\r\n\r\n\r\nexport default function form(object) {\r\n    class FormElement {\r\n        constructor(object) {\r\n            this.element = document.getElementById(object);\r\n\r\n            if (!this.element) {\r\n                throw new Error(`Element not found: ${object}`);\r\n            }\r\n\r\n            if (this.element.tagName !== \"FORM\") {\r\n                throw new Error(\"Element is not a form.\");\r\n            }\r\n        }\r\n\r\n        async post({ data = {}, options = { csrf: true, textOnly: false }, url = window.location.href } = {}) {\r\n            // Convert form data into an object if not passed\r\n            if (Object.keys(data).length === 0) {\r\n                data = new FormData(this.element);\r\n                // Iterate over FormData entries and convert to object\r\n                //data = Object.fromEntries(data.entries());\r\n                // Sanitize each input value\r\n                data = Object.fromEntries(\r\n                    Array.from(data.entries()).map(([key, value]) => [\r\n                        key,\r\n                        options.textOnly ? sanis(value) : value,\r\n                    ])\r\n                );\r\n            }\r\n\r\n            // Check for CSRF token\r\n            let csrfToken = document.querySelector('meta[name=\"csrf-token\"]')?.content;\r\n            if (!csrfToken) {\r\n                csrfToken = document.querySelector('input[name=\"_csrf\"]')?.value || document.querySelector('input[name=\"csrf\"]')?.value;\r\n            }\r\n            if (!csrfToken && options.csrf) {\r\n                throw new Error(\"CSRF token not found.\");\r\n            }\r\n\r\n\r\n            // Headers\r\n            const headers = {\r\n                \"Content-Type\": \"application/json\",\r\n                ...(options.csrf && csrfToken ? { \"X-CSRF-Token\": csrfToken } : {}),\r\n            };\r\n\r\n            try {\r\n                const response = await fetch(url, {\r\n                    method: \"POST\",\r\n                    headers: headers,\r\n                    body: JSON.stringify(data),\r\n                    credentials: \"include\"\r\n                });\r\n\r\n                if (!response.ok) {\r\n                    throw new Error(\r\n                        `Request failed with status: ${response.status}`\r\n                    );\r\n                }\r\n\r\n                const responseData = await response.json();\r\n\r\n                return responseData;\r\n                \r\n            } catch (error) {\r\n                console.error(\"Error during form submission:\", error);\r\n                return { error: error.message };\r\n            }\r\n        }\r\n\r\n        populateForm(data) {\r\n            for (let key in data) {\r\n                const field = this.element.querySelector(`[name=\"${key}\"]`);\r\n                field ? field.value = data[key] : null;\r\n            }\r\n        }\r\n    }\r\n\r\n    return new FormElement(object);\r\n}","export class NetworkError extends Error {\r\n    constructor(message) {\r\n        super(message);\r\n        this.name = \"NetworkError\";\r\n    }\r\n}\r\n\r\nexport class TimeoutError extends Error {\r\n    constructor(message) {\r\n        super(message);\r\n        this.name = \"TimeoutError\";\r\n    }\r\n}\r\n\r\nexport class ValidationError extends Error {\r\n    constructor(message) {\r\n        super(message);\r\n        this.name = \"ValidationError\";\r\n    }\r\n}","import { NetworkError, TimeoutError } from \"./errors\";\r\n\r\nexport async function get(url, options = {}) {\r\n    const { timeout = 7500, secretKey } = options;\r\n    const controller = new AbortController();\r\n    const timeoutId = setTimeout(() => controller.abort(), timeout);\r\n\r\n    const {\r\n        headers = {},\r\n        queryParams = {},\r\n        includeCredentials = false,\r\n    } = options;\r\n\r\n    try {\r\n        // Validate URL\r\n        if (!url || typeof url !== \"string\") {\r\n            throw new Error(\"Invalid URL provided.\");\r\n        }\r\n\r\n        // Append query parameters to the URL\r\n        const urlWithParams = new URL(url);\r\n        Object.entries(queryParams).forEach(([key, value]) => {\r\n            urlWithParams.searchParams.append(key, value);\r\n        });\r\n\r\n        // Add secret key to headers if provided\r\n        if (secretKey) {\r\n            headers[\"Authorization\"] = `Bearer ${secretKey}`;\r\n        }\r\n\r\n        // Make the request\r\n        const response = await fetch(urlWithParams.toString(), {\r\n            method: \"GET\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                ...headers, // Merge custom headers (including secret key)\r\n            },\r\n            credentials: includeCredentials ? \"include\" : \"omit\",\r\n            signal: controller.signal,\r\n        });\r\n\r\n        // Clear the timeout\r\n        clearTimeout(timeoutId);\r\n\r\n        // Check for HTTP errors\r\n        if (!response.ok) {\r\n            throw new NetworkError(`Request failed with status: ${response.status}`);\r\n        }\r\n\r\n        // Parse and return the response data\r\n        const responseData = await response.json();\r\n        return responseData;\r\n\r\n    } catch (error) {\r\n        if (error instanceof NetworkError) {\r\n            console.error(\"Network error:\", error.message);\r\n        } else if (error instanceof TimeoutError) {\r\n            console.error(\"Timeout error:\", error.message);\r\n        } else {\r\n            console.error(\"Unknown error:\", error);\r\n        }\r\n        throw error;\r\n    }\r\n}","import $_ from './modules/ribbon';\r\nimport * as utils from './modules/utils';\r\n\r\nconst Ruban = {\r\n  $_,\r\n  ...utils,\r\n};\r\n\r\n\r\nexport default Ruban;\r\n\r\n\r\nif (typeof window !== 'undefined') {\r\n  window.Ruban = Ruban;\r\n  window.$_ = $_;\r\n  window.$ = $_;\r\n}"],"names":["$_","object","DOMElement","_classCallCheck","element","document","getElementById","slice","querySelector","Error","concat","_createClass","key","value","getText","innerText","getLabelText","_this$element$closest","index","arguments","length","undefined","inputName","name","parentElement","querySelectorAll","label","closest","inputId","setText","text","getValue","setValue","addClass","className","classList","add","removeClass","remove","on","event","callback","addEventListener","sanis","inputString","replace","sanil","sanin","String","prototype","form","FormElement","tagName","_post","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_document$querySelect","_ref","_ref$data","data","_ref$options","options","_ref$url","url","csrfToken","_document$querySelect2","_document$querySelect3","headers","response","responseData","_args","wrap","_callee$","_context","prev","next","csrf","textOnly","window","location","href","Object","keys","FormData","fromEntries","Array","from","entries","map","_ref2","_ref3","_slicedToArray","content","_objectSpread","fetch","method","body","JSON","stringify","credentials","sent","ok","status","json","abrupt","t0","console","error","message","stop","post","apply","populateForm","field","NetworkError","_Error","_this","_callSuper","_inherits","_wrapNativeSuper","TimeoutError","_Error2","_this2","ValidationError","_Error3","_this3","get","_x","_get","_options$timeout","timeout","secretKey","controller","timeoutId","_options$headers","_options$queryParams","queryParams","_options$includeCrede","includeCredentials","urlWithParams","AbortController","setTimeout","abort","URL","forEach","searchParams","append","toString","signal","clearTimeout","Ruban","utils","$"],"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"}