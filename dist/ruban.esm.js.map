{"version":3,"file":"ruban.esm.js","sources":["../src/modules/ribbon.js","../src/modules/utils/errors.js","../src/modules/utils/sanitize.js","../src/modules/utils/form.js","../src/modules/utils/http.js","../src/modules/utils/secure-form.js","../src/main.js"],"sourcesContent":["export default function $_(object) {\r\n    \r\n    class DOMElement {\r\n\r\n        constructor(object) {\r\n            if (object[0] === \"#\") {\r\n                this.element = document.getElementById(object.slice(1));\r\n            } else {\r\n                this.element = document.querySelector(object);\r\n            }\r\n\r\n            if (!this.element) {\r\n                throw new Error(`Element not found: ${object}`);\r\n            }\r\n        }\r\n\r\n        // Method to get the inner text of the element\r\n        getText() {\r\n            return this.element.innerText;\r\n        }\r\n\r\n        // Method to get the label text of the element\r\n        getLabelText(index = 0) {\r\n            const inputName =\r\n                this.element.name ||\r\n                this.parentElement.querySelectorAll(\"input, select, textarea\")[\r\n                    index\r\n                ].name;\r\n            if (!inputName) return null;\r\n\r\n            const label = this.element\r\n                .closest(\"form\")\r\n                ?.querySelector(`label[for=\"${inputName}\"]`);\r\n\r\n            return label ? label.innerText : null;\r\n        }\r\n        \r\n        // Method to set the inner text of the element\r\n        setText(text) {\r\n            this.element.innerText = text;\r\n        }\r\n\r\n        // Method to get the element's value (for inputs, etc.)\r\n        getValue() {\r\n            return this.element.value;\r\n        }\r\n\r\n        // Method to set the element's value (for inputs, etc.)\r\n        setValue(value) {\r\n            this.element.value = value;\r\n        }\r\n\r\n        // Method to add a class to the element\r\n        addClass(className) {\r\n            this.element.classList.add(className);\r\n        }\r\n\r\n        // Method to remove a class from the element\r\n        removeClass(className) {\r\n            this.element.classList.remove(className);\r\n        }\r\n\r\n        // Method to add an event listener to the element\r\n        on(event, callback) {\r\n            this.element.addEventListener(event, callback);\r\n        }\r\n\r\n    }\r\n\r\n    return new DOMElement(object);\r\n}","export class NetworkError extends Error {\r\n    constructor(message) {\r\n        super(message);\r\n        this.name = \"NetworkError\";\r\n    }\r\n}\r\n\r\nexport class TimeoutError extends Error {\r\n    constructor(message) {\r\n        super(message);\r\n        this.name = \"TimeoutError\";\r\n    }\r\n}\r\n\r\nexport class ValidationError extends Error {\r\n    constructor(message) {\r\n        super(message);\r\n        this.name = \"ValidationError\";\r\n    }\r\n}","// Sanitize Input String (Letters and Numbers Only)\r\nexport function sanis(inputString) {\r\n    return inputString.replace(/[^a-zA-Z0-9]/g, \"\");\r\n}\r\n\r\n// Sanitize Input Letters Only\r\nexport function sanil(inputString) {\r\n    return inputString.replace(/[^a-zA-Z]/g, \"\");\r\n}\r\n\r\n// Sanitize Input Numbers Only\r\nexport function sanin(inputString) {\r\n    return inputString.replace(/[^0-9]/g, \"\");\r\n}\r\n\r\n// Extend String prototype with the custom sanitization methods\r\nString.prototype.sanis = function () {\r\n    return this.replace(/[^a-zA-Z0-9]/g, \"\");\r\n};\r\n\r\nString.prototype.sanil = function () {\r\n    return this.replace(/[^a-zA-Z]/g, \"\");\r\n};\r\n\r\nString.prototype.sanin = function () {\r\n    return this.replace(/[^0-9]/g, \"\");\r\n};\r\n","import { sanis, sanil, sanin } from './sanitize.js';\r\n\r\n\r\nexport default function form(object) {\r\n    class FormElement {\r\n        constructor(object) {\r\n            this.element = document.getElementById(object);\r\n\r\n            if (!this.element) {\r\n                throw new Error(`Element not found: ${object}`);\r\n            }\r\n\r\n            if (this.element.tagName !== \"FORM\") {\r\n                throw new Error(\"Element is not a form.\");\r\n            }\r\n        }\r\n\r\n        async post({ data = {}, options = { csrf: true, textOnly: false }, url = window.location.href } = {}) {\r\n            // Convert form data into an object if not passed\r\n            if (Object.keys(data).length === 0) {\r\n                data = new FormData(this.element);\r\n                // Iterate over FormData entries and convert to object\r\n                //data = Object.fromEntries(data.entries());\r\n                // Sanitize each input value\r\n                data = Object.fromEntries(\r\n                    Array.from(data.entries()).map(([key, value]) => [\r\n                        key,\r\n                        options.textOnly ? sanis(value) : value,\r\n                    ])\r\n                );\r\n            }\r\n\r\n            // Check for CSRF token\r\n            let csrfToken = document.querySelector('meta[name=\"csrf-token\"]')?.content;\r\n            if (!csrfToken) {\r\n                csrfToken = document.querySelector('input[name=\"_csrf\"]')?.value || document.querySelector('input[name=\"csrf\"]')?.value;\r\n            }\r\n            if (!csrfToken && options.csrf) {\r\n                throw new Error(\"CSRF token not found.\");\r\n            }\r\n\r\n\r\n            // Headers\r\n            const headers = {\r\n                \"Content-Type\": \"application/json\",\r\n                ...(options.csrf && csrfToken ? { \"X-CSRF-Token\": csrfToken } : {}),\r\n            };\r\n\r\n            try {\r\n                const response = await fetch(url, {\r\n                    method: \"POST\",\r\n                    headers: headers,\r\n                    body: JSON.stringify(data),\r\n                    credentials: \"include\"\r\n                });\r\n\r\n                if (!response.ok) {\r\n                    throw new Error(\r\n                        `Request failed with status: ${response.status}`\r\n                    );\r\n                }\r\n\r\n                const responseData = await response.json();\r\n\r\n                return responseData;\r\n                \r\n            } catch (error) {\r\n                console.error(\"Error during form submission:\", error);\r\n                return { error: error.message };\r\n            }\r\n        }\r\n\r\n        populateForm(data) {\r\n            for (let key in data) {\r\n                const field = this.element.querySelector(`[name=\"${key}\"]`);\r\n                field ? field.value = data[key] : null;\r\n            }\r\n        }\r\n    }\r\n\r\n    return new FormElement(object);\r\n}","import { NetworkError, TimeoutError } from \"./errors\";\r\n\r\nexport async function get(url, options = {}) {\r\n    const { timeout = 7500, secretKey } = options;\r\n    const controller = new AbortController();\r\n    const timeoutId = setTimeout(() => controller.abort(), timeout);\r\n\r\n    const {\r\n        headers = {},\r\n        queryParams = {},\r\n        includeCredentials = false,\r\n    } = options;\r\n\r\n    try {\r\n        // Validate URL\r\n        if (!url || typeof url !== \"string\") {\r\n            throw new Error(\"Invalid URL provided.\");\r\n        }\r\n\r\n        // Append query parameters to the URL\r\n        const urlWithParams = new URL(url);\r\n        Object.entries(queryParams).forEach(([key, value]) => {\r\n            urlWithParams.searchParams.append(key, value);\r\n        });\r\n\r\n        // Add secret key to headers if provided\r\n        if (secretKey) {\r\n            headers[\"Authorization\"] = `Bearer ${secretKey}`;\r\n        }\r\n\r\n        // Make the request\r\n        const response = await fetch(urlWithParams.toString(), {\r\n            method: \"GET\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                ...headers,\r\n            },\r\n            credentials: includeCredentials ? \"include\" : \"omit\",\r\n            signal: controller.signal,\r\n        });\r\n\r\n        // Clear the timeout\r\n        clearTimeout(timeoutId);\r\n\r\n        // Check for HTTP errors\r\n        if (!response.ok) {\r\n            throw new NetworkError(`Request failed with status: ${response.status}`);\r\n        }\r\n\r\n        // Parse and return the response data\r\n        const responseData = await response.json();\r\n        return responseData;\r\n\r\n    } catch (error) {\r\n        if (error instanceof NetworkError) {\r\n            console.error(\"Network error:\", error.message);\r\n        } else if (error instanceof TimeoutError) {\r\n            console.error(\"Timeout error:\", error.message);\r\n        } else {\r\n            console.error(\"Unknown error:\", error);\r\n        }\r\n        throw error;\r\n    }\r\n}","import { ValidationError } from \"./errors\";\r\n\r\nfunction getFormData(formElement) {\r\n    const formData = new FormData(formElement);\r\n    const formObject = {};\r\n\r\n    formData.forEach((value, key) => {\r\n        formObject[key] = value;\r\n    });\r\n\r\n    return formObject;\r\n}\r\n\r\nexport default function secureForm(form) {\r\n    // Setup legit version of form\r\n    const originalForm = getFormData(form);\r\n    console.log('Original form:', originalForm);\r\n\r\n    // Listen for form submission\r\n    form.addEventListener('submit', (event) => {\r\n        event.preventDefault();\r\n        const formObject = getFormData(form);\r\n        console.log('Form object:', formObject);\r\n\r\n        // Compare all keys/name(inputs)\r\n        const isFormSecure = Object.keys(formObject).every((key) => {\r\n            //return originalForm.includes(key);\r\n            return key in originalForm;\r\n        });\r\n\r\n        if (isFormSecure) {\r\n            form.submit();\r\n        } else {\r\n            throw new ValidationError('Form is not secure!');\r\n        }\r\n    });\r\n}","import $_ from \"./modules/ribbon\";\r\nimport * as utils from \"./modules/utils\";\r\n\r\nconst Ruban = {\r\n    $_,\r\n    ...utils,\r\n};\r\n\r\nexport default Ruban;\r\n\r\nif (typeof window !== \"undefined\") {\r\n    window.Ruban = Ruban;\r\n    window.$_ = $_;\r\n    window.$ = $_;\r\n}\r\n\r\n(function() {\r\n    console.log(\"Ruban is ready!\");\r\n\r\n    document.addEventListener('DOMContentLoaded', function() {\r\n        const forms = document.querySelectorAll('form[data-ruban-form-secure=\"true\"]');\r\n        forms.forEach((form) => {\r\n            //console.log('Securing form...', form);\r\n            Ruban.secureForm(form);\r\n        });\r\n    });\r\n})();"],"names":["$_","object","DOMElement","_classCallCheck","element","document","getElementById","slice","querySelector","Error","concat","_createClass","key","value","getText","innerText","getLabelText","_this$element$closest","index","arguments","length","undefined","inputName","name","parentElement","querySelectorAll","label","closest","setText","text","getValue","setValue","addClass","className","classList","add","removeClass","remove","on","event","callback","addEventListener","NetworkError","_Error","message","_this","_callSuper","_inherits","_wrapNativeSuper","TimeoutError","_Error2","_this2","ValidationError","_Error3","_this3","sanis","inputString","replace","sanil","sanin","String","prototype","form","FormElement","tagName","_post","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_document$querySelect","_ref","_ref$data","data","_ref$options","options","_ref$url","url","csrfToken","_document$querySelect2","_document$querySelect3","headers","response","responseData","_args","wrap","_callee$","_context","prev","next","csrf","textOnly","window","location","href","Object","keys","FormData","fromEntries","Array","from","entries","map","_ref2","_ref3","_slicedToArray","content","_objectSpread","fetch","method","body","JSON","stringify","credentials","sent","ok","status","json","abrupt","t0","console","error","stop","post","apply","populateForm","field","get","_x","_get","_options$timeout","timeout","secretKey","controller","timeoutId","_options$headers","_options$queryParams","queryParams","_options$includeCrede","includeCredentials","urlWithParams","AbortController","setTimeout","abort","URL","forEach","searchParams","append","toString","signal","clearTimeout","getFormData","formElement","formData","formObject","secureForm","originalForm","log","preventDefault","isFormSecure","every","submit","Ruban","utils","$","forms"],"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"}